{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { BIconPlus, BIconDash } from 'bootstrap-vue';\nimport HorseView from '@/components/HorseView';\nimport axios from 'axios';\nimport _ from 'underscore';\nexport default {\n  name: 'App',\n  components: {\n    HorseView,\n    BIconPlus,\n    BIconDash\n  },\n  data() {\n    return {\n      races: [],\n      options: {\n        surface: 'all',\n        distance: 'all',\n        condition: 'all'\n      },\n      trackConditions: [{\n        value: \"ft\",\n        text: \"Fast\"\n      }, {\n        value: \"my\",\n        text: \"Muddy\"\n      }, {\n        value: \"wf\",\n        text: \"Wet Fast\"\n      }, {\n        value: \"yl\",\n        text: \"Yielding\"\n      }, {\n        value: \"hy\",\n        text: \"Heavy\"\n      }, {\n        value: \"gd\",\n        text: \"Good\"\n      }, {\n        value: \"sy\",\n        text: \"Sloppy\"\n      }, {\n        value: \"fm\",\n        text: \"Firm\"\n      }, {\n        value: \"sf\",\n        text: \"Soft\"\n      }, {\n        value: \"sl\",\n        text: \"Slow\"\n      }],\n      surfaceOptions: [{\n        value: 'all',\n        text: 'All Surfaces'\n      }, {\n        value: 'same',\n        text: 'Same Surface Only'\n      }, {\n        value: 'off',\n        text: 'Off The Turf'\n      }],\n      distanceOptions: [{\n        value: 'all',\n        text: 'All Distances'\n      }, {\n        value: 'same',\n        text: 'Same Distance Only'\n      }, {\n        value: 'similar',\n        text: 'Similar Distances'\n      }],\n      conditionOptions: [{\n        value: 'all',\n        text: 'All Conditions'\n      }, {\n        value: 'good',\n        text: 'Good'\n      }, {\n        value: 'off',\n        text: 'Off'\n      }, {\n        value: \"my\",\n        text: \"Muddy\"\n      }, {\n        value: \"wf\",\n        text: \"Wet Fast\"\n      }, {\n        value: \"yl\",\n        text: \"Yielding\"\n      }, {\n        value: \"hy\",\n        text: \"Heavy\"\n      }, {\n        value: \"gd\",\n        text: \"Good\"\n      }, {\n        value: \"sy\",\n        text: \"Sloppy\"\n      }, {\n        value: \"sf\",\n        text: \"Soft\"\n      }, {\n        value: \"sl\",\n        text: \"Slow\"\n      }]\n    };\n  },\n  methods: {\n    async loadAndCalculate() {\n      try {\n        const response = await axios({\n          url: 'loadAndCalculate',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async calculateAndGetAll() {\n      try {\n        const response = await axios({\n          url: 'calculateAndGetAll',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async updateCondition(race) {\n      try {\n        const response = await axios({\n          url: 'setTrackCondition/' + race.raceNumber + '/' + race.trackCondition,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async toggleOffTheTurf(race) {\n      try {\n        const response = await axios({\n          url: 'toggleOffTheTurf/' + race.raceNumber,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    reload() {\n      this.$bvModal.msgBoxConfirm(\"Reload and Start Over?\").then(confirmed => {\n        if (confirmed) {\n          this.loadAndCalculate();\n        }\n      });\n    },\n    toggleAll(race, b) {\n      _.each(race.horses, async function (horse) {\n        try {\n          horse._showDetails = b;\n          await axios({\n            url: 'toggleShowDetail/' + race.raceNumber + '/' + horse.programNumber,\n            method: 'GET',\n            baseURL: 'http://localhost:8080/jpp/rest/remote/'\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AAEA;AACA;AAEA;EACAA;EACAC;IACAC;IAAAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC,kBACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC,iBACA;QAAAF;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAE,kBACA;QAAAH;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAG,mBACA;QAAAJ;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA;IAEA;EACA;EACAI;IACA;MACA;QACA;UACAC;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACA;MACA;QACA;UACAH;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACA;MACA;QACA;UACAH;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACA;MACA;QACA;UACAH;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACAC;MACA,sDACAC;QACA;UACA;QACA;MACA;IACA;IACAC;MACAC;QACA;UACAC;UACA;YACAR;YACAC;YACAC;UACA;QACA;UACAC;QAEA;MACA;IACA;EACA;AACA","names":["name","components","HorseView","BIconPlus","BIconDash","data","races","options","surface","distance","condition","trackConditions","value","text","surfaceOptions","distanceOptions","conditionOptions","methods","url","method","baseURL","console","reload","then","toggleAll","_","horse"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<b-container fluid>\n\n\t\t\t<b-navbar id=\"nav\" toggleable=\"sm\" class=\"py-2\" type=\"dark\" variant=\"primary\">\n\t\t\t\t\t\t\t\n\t\t\t\t<b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\n\t\t\t\t<b-collapse id=\"nav-collapse\" is-nav>\n\t\t\t\t\t<b-navbar-nav small>\n\t\t\t\t\t\t<b-nav-item class=\"h4\">JPP-UI</b-nav-item>\n\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t</b-collapse>\n\t\t\t\t<!-- Right aligned nav items -->\n\t\t\t\t<b-navbar-nav>\n\t\t\t\t\t<b-nav-form>\n\t\t\t\t\t\t<b-form-input size=\"sm\" placeholder=\"Filename\"></b-form-input>\t\t\n\t\t\t\t\t</b-nav-form>\n\t\t\t\t</b-navbar-nav>\n\t\t\t\t<b-navbar-nav class=\"\" small>\n\t\t\t\t\t<b-nav-item v-if=\"races.length == 0\" @click=\"loadAndCalculate\">Load</b-nav-item>\n\t\t\t\t\t<b-nav-item v-else @click=\"reload\">Reload</b-nav-item>\n\t\t\t\t\t<b-nav-item @click=\"calculateAndGetAll\">Calculate</b-nav-item>\n\t\t\t\t</b-navbar-nav>\n\t\t\t</b-navbar>\n\n\t\t\t<b-tabs>\n\t\t\t\t<b-tab v-for=\"race in races\" :key=\"race.raceNumber\">\n\t\t\t\t\t<template #title>\n\t\t\t\t\t\tRace {{race.raceNumber}}&nbsp;\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t<h5 class=\"card-title\">\n\t\t\t\t\t\t\t\t<span>Race {{race.raceNumber}}</span>\n\t\t\t\t\t\t\t\t<small v-b-toggle=\"'collapse-'+race.race_id\"> - <u>show/hide details</u></small>\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t<b-collapse :id=\"'collapse-'+race.race_id\" visible>\n\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t${{race.purse}} {{race.raceType}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t{{race.surface}} {{race.furlongs}} Furlongs\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col cols=\"6\">\n\t\t\t\t\t\t\t\t\t\t{{race.ageRestriction}} {{race.ageRestrictionRange}} {{race.sexRestriction}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t<b-col cols=\"8\">\n\t\t\t\t\t\t\t\t\t\tWagers: {{race.wagerTypes}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\tPost Times: {{race.postTimes}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t</b-collapse>\n\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t{{race.paceScenario}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col cols=\"2\">\n\t\t\t\t\t\t\t\t\tPars: {{race.furlongs &lt; 8 ? race.parPace2F : race.parPace4F}} {{race.furlongs &lt; 8 ? race.parPace4F : race.parPace6F}} / {{race.parLatePace}} - {{race.parSpeed}} \n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\tMaxSpeed: {{race.maxSpeed}}\n\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\tE1Avg: {{race.e1Avg}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\tE2Avg: {{race.e2Avg}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\tMaxE2: {{race.maxE2}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\tLatePaceBestL3: {{race.latePaceBestLast3}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<b-navbar id=\"nav\" class=\"py-2\" variant=\"success\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- Right aligned nav items -->\n\t\t\t\t\t\t\t<b-navbar-nav>\n\t\t\t\t\t\t\t\t<b-nav-form>\n\t\t\t\t\t\t\t\t\t<b-form-select v-model=\"race.trackCondition\" :options=\"trackConditions\" @change=\"updateCondition(race)\"></b-form-select>\t\t\n\t\t\t\t\t\t\t\t\t<b-form-checkbox switch class=\"m-2\" v-if=\"race.surface.indexOf('TURF') > -1\" v-model=\"race.offTheTurfFlag\" @change=\"toggleOffTheTurf(race)\">Off</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t<b-form-select class=\"m-2\" v-model=\"options.distance\" :options=\"distanceOptions\" @change=\"calculateAndGetAll\"></b-form-select>\n\t\t\t\t\t\t\t\t\t<b-form-select class=\"m-2\" v-model=\"options.surface\" :options=\"surfaceOptions\" @change=\"calculateAndGetAll\"></b-form-select>\n\t\t\t\t\t\t\t\t\t<b-form-select class=\"m-2\" v-model=\"options.condition\" :options=\"conditionOptions\" @change=\"calculateAndGetAll\"></b-form-select>\t\t\n\t\t\t\t\t\t\t\t</b-nav-form>\n\t\t\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t\t\t\t<b-navbar-nav class=\"ml-auto\" small>\n\t\t\t\t\t\t\t\t<b-nav-item @click=\"toggleAll(race, true)\"><b-icon-plus font-scale=\"2\"></b-icon-plus></b-nav-item>\n\t\t\t\t\t\t\t\t<b-nav-item @click=\"toggleAll(race, false)\"><b-icon-dash font-scale=\"2\"></b-icon-dash></b-nav-item>\n\t\t\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t\t\t</b-navbar>\t\t\n\n\t\t\t\t\t<horse-view :race=\"race\"></horse-view>\n\t\t\t\t</b-tab>\n\t\t\t</b-tabs>\n\n\t\t</b-container>\n\t</div>\n</template>\n\n<script>\nimport { BIconPlus, BIconDash } from 'bootstrap-vue'\nimport HorseView from '@/components/HorseView'\n\nimport axios from 'axios'\nimport _ from 'underscore'\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tHorseView, BIconPlus, BIconDash\n\t},\n\tdata () {\n\t\treturn {\n\t\t\traces: [],\n\t\t\toptions: {\n\t\t\t\tsurface: 'all',\n\t\t\t\tdistance: 'all',\n\t\t\t\tcondition: 'all'\n\t\t\t},\n\t\t\ttrackConditions: [\n\t\t\t\t{value: \"ft\", text: \"Fast\"},\n\t\t\t\t{value: \"my\", text: \"Muddy\"},\n\t\t\t\t{value: \"wf\", text: \"Wet Fast\"},\n\t\t\t\t{value: \"yl\", text: \"Yielding\"},\n\t\t\t\t{value: \"hy\", text: \"Heavy\"},\n\t\t\t\t{value: \"gd\", text: \"Good\"},\n\t\t\t\t{value: \"sy\", text: \"Sloppy\"},\n\t\t\t\t{value: \"fm\", text: \"Firm\"},\n\t\t\t\t{value: \"sf\", text: \"Soft\"},\n\t\t\t\t{value: \"sl\", text: \"Slow\"}\n\t\t\t],\n\t\t\tsurfaceOptions: [\n\t\t\t\t{value: 'all', text: 'All Surfaces'},\n\t\t\t\t{value: 'same', text: 'Same Surface Only'},\n\t\t\t\t{value: 'off', text: 'Off The Turf'}\n\t\t\t],\n\t\t\tdistanceOptions: [\n\t\t\t\t{value: 'all', text: 'All Distances'},\n\t\t\t\t{value: 'same', text: 'Same Distance Only'},\n\t\t\t\t{value: 'similar', text: 'Similar Distances'}\n\t\t\t],\n\t\t\tconditionOptions: [\n\t\t\t\t{value: 'all', text: 'All Conditions'},\n\t\t\t\t{value: 'good', text: 'Good'},\n\t\t\t\t{value: 'off', text: 'Off'},\n\t\t\t\t{value: \"my\", text: \"Muddy\"},\n\t\t\t\t{value: \"wf\", text: \"Wet Fast\"},\n\t\t\t\t{value: \"yl\", text: \"Yielding\"},\n\t\t\t\t{value: \"hy\", text: \"Heavy\"},\n\t\t\t\t{value: \"gd\", text: \"Good\"},\n\t\t\t\t{value: \"sy\", text: \"Sloppy\"},\n\t\t\t\t{value: \"sf\", text: \"Soft\"},\n\t\t\t\t{value: \"sl\", text: \"Slow\"}\n\t\t\t]\n\t\t}\n\t},\n\tmethods: {\n\t\tasync loadAndCalculate() {\n            try {\n                const response = await axios({\n                    url: 'loadAndCalculate',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\n\t\tasync calculateAndGetAll() {\n            try {\n                const response = await axios({\n                    url: 'calculateAndGetAll',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\t\t\t\n\t\tasync updateCondition(race) {\n            try {\n                const response = await axios({\n                    url: 'setTrackCondition/' + race.raceNumber + '/' + race.trackCondition,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n\t\t\t\tthis.races = response.data;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\t\t\n\t\t},\n\t\tasync toggleOffTheTurf(race) {\n            try {\n                const response = await axios({\n                    url: 'toggleOffTheTurf/' + race.raceNumber,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n\t\t\t\tthis.races = response.data;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\t\t\n\t\t},\n\t\treload() {\n\t\t\tthis.$bvModal.msgBoxConfirm(\"Reload and Start Over?\")\n\t\t\t\t.then(confirmed => {\n\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\tthis.loadAndCalculate();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\ttoggleAll(race, b) {\n\t\t\t_.each(race.horses, async function(horse){\t\t\n\t\t\t\ttry {\n\t\t\t\t\thorse._showDetails = b;\n\t\t\t\t\tawait axios({\n\t\t\t\t\t\turl: 'toggleShowDetail/' + race.raceNumber + '/' + horse.programNumber,\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\n\t\t\t\t}           \n\t\t\t});\n\t\t},\t\t\t\t\n\t}\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\ntable#pps .flip-list-move {\n  transition: transform 1s;\n}\n\n#filenameform {\n\twidth: 400px;\n}\n.pp {\n\tfont-size: xx-small;\n}\n\n.diff365 {\n\tborder-top: solid orange;\n}\n\n.diff90 {\n\tborder-top: solid purple;\n}\n\n.workout {\n\twhite-space: pre;\n}\n\n.alsoInRace, .strong {\n\tfont-weight: bold;\n}\n\n.scratched, .ignored {\n\ttext-decoration: line-through;\n}\n\n.greenHighlight {\n\tbackground-color: greenyellow;\n}\n\n.lightGreenHighlight {\n\tbackground-color: rgb(223, 249, 184);\n}\n\n.lightGreenHighlightBorder {\n\tborder-bottom: solid greenyellow;\n}\n\n.blueHighlight {\n\tbackground-color: lightblue;\n}\n\n.gt180, redHighlight {\n\tbackground-color: red;\n}\n\n.gt90, lightRedHighlight {\n\tbackground-color: rgb(231, 194, 194)\n}\n\n.gt45, .yellowHighlight  {\n\tbackground-color: yellow;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}