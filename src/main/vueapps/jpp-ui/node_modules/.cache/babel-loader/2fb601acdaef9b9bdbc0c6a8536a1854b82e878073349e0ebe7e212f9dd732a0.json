{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { BIconTypeUnderline, BIconTypeStrikethrough, BIconInfo } from 'bootstrap-vue';\nimport axios from 'axios';\nimport _ from 'underscore';\nexport default {\n  name: 'App',\n  components: {\n    BIconTypeUnderline,\n    BIconTypeStrikethrough,\n    BIconInfo\n  },\n  data() {\n    return {\n      races: [],\n      horseFields: [{\n        key: \"scratchButton\",\n        label: \"\"\n      }, {\n        key: \"programNumber\",\n        label: \"#\"\n      }, {\n        key: \"mlodds\",\n        \"label\": \"ML\",\n        sortable: true\n      }, \"name\", {\n        key: \"daysSinceLastRace\",\n        label: \"l/r\",\n        tdClass: this.highlightDaysSince\n      }, {\n        key: \"furlongDays\",\n        label: \"FD\",\n        formatter: this.format2Places,\n        sortable: true\n      }, {\n        key: \"style\",\n        label: \"Style\",\n        tdClass: this.highlightPaceAdvantage\n      }, {\n        key: \"classRating\",\n        label: \"Class\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"speedRating\",\n        label: \"Speed\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"arating\",\n        label: \"AR\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"aratingClass\",\n        label: \"AR Cl\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"aratingForm\",\n        label: \"AR F\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"aratingConnections\",\n        label: \"AR Co\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"e1Avg\",\n        label: \"E1\",\n        formatter: this.formatInt,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"e2Avg\",\n        label: \"E2\",\n        formatter: this.formatInt,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"turnTime\",\n        label: \"TT\",\n        formatter: this.formatInt,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"latePaceAvg\",\n        label: \"Late\",\n        formatter: this.formatInt,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"combinedPaceAvg\",\n        label: \"Comb\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightMax\n      }, {\n        key: \"classShift\",\n        label: \"cSh\",\n        formatter: this.format2Places,\n        sortable: true,\n        tdClass: this.highlightShift\n      }, {\n        key: \"purseShift\",\n        label: \"pSh\",\n        formatter: this.formatInt,\n        sortable: true,\n        tdClass: this.highlightShift\n      }, {\n        key: \"detailsButton\",\n        label: \"\"\n      }]\n    };\n  },\n  methods: {\n    async loadAndCalculate() {\n      try {\n        const response = await axios({\n          url: 'loadAndCalculate',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async calculateAndGetAll() {\n      try {\n        const response = await axios({\n          url: 'calculateAndGetAll',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async toggleScratch(item) {\n      try {\n        var race = _.find(this.races, function (r) {\n          return r.raceNumber == item.raceNumber;\n        });\n        await axios({\n          url: 'toggleScratch/' + race.raceNumber + '/' + item.programNumber,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        item.scratchedFlag = !item.scratchedFlag;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    rowClass(item, type) {\n      if (!item || type !== 'row') return;\n      if (item.scratchedFlag) return 'table-dark scratched';\n      return 'notScratched';\n    },\n    format2Places(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 2,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 2 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    formatInt(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 0,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    formatCurrency(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 0,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    highlightMax(value, key, item) {\n      var race = _.find(this.races, function (r) {\n        return r.raceNumber == item.raceNumber;\n      });\n      var values = _.pluck(_.reject(race.horses, function (h) {\n        return h.scratchedFlag;\n      }), key);\n      if (value == _.max(values)) {\n        return \"greenHighlight\";\n      }\n    },\n    highlightDaysSince(value) {\n      if (value > 180) return \"gt180\";\n      if (value > 90) return \"gt90\";\n      if (value > 45) return \"gt45\";\n    },\n    highlightPaceAdvantage(value, key, item) {\n      var race = _.find(this.races, function (r) {\n        return r.raceNumber == item.raceNumber;\n      });\n      if (_.contains(_.pluck(race.advantagedHorses, \"programNumber\"), item.programNumber)) return \"greenHighlight\";\n    },\n    highlightShift(value) {\n      if (value < 0) return \"greenHighlight\";\n      if (value > 0) return \"yellowHighlight\";\n      return \"\";\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuJA;AAEA;AACA;AAEA;EACAA;EACAC;IACAC;IAAAC;IAAAC;EACA;EACAC;IACA;MACAC;MACAC,cACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAA;QAAAE;MAAA,GACA,QACA;QAAAF;QAAAC;QAAAE;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;MAAA,GACA;QAAAF;QAAAC;QAAAE;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAG;QAAAF;QAAAC;MAAA,GACA;QAAAH;QAAAC;MAAA;IAGA;EACA;EACAI;IACA;MACA;QACA;UACAC;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACA;MACA;QACA;UACAH;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACA;MACA;QACA;UACA;QACA;QACA;UACAH;UACAC;UACAC;QACA;QACAE;MACA;QACAD;MAEA;IACA;IACAE;MACA;MACA;MACA;IACA;IACAC;MACA;QAGA;QACAC;QAAA;QACAC;MACA;;MACA;IACA;IACAC;MACA;QAGA;QACAF;QAAA;QACAC;MACA;;MACA;IACA;IACAE;MACA;QACAC;QACAC;QAEA;QACAL;QAAA;QACAC;MACA;;MACA;IACA;IACAK;MACA;QACA;MACA;MAEA;QACA;MACA;MAEA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MAEA;IACA;IACAC;MACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","BIconTypeUnderline","BIconTypeStrikethrough","BIconInfo","data","races","horseFields","key","label","sortable","tdClass","formatter","methods","url","method","baseURL","console","item","rowClass","format2Places","minimumFractionDigits","maximumFractionDigits","formatInt","formatCurrency","style","currency","highlightMax","highlightDaysSince","highlightPaceAdvantage","highlightShift"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<b-container fluid>\n\n\t\t\t<b-navbar id=\"nav\" toggleable=\"sm\" class=\"py-2\" type=\"dark\" variant=\"primary\">\n\t\t\t\t\t\t\t\n\t\t\t\t<b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\n\t\t\t\t<b-collapse id=\"nav-collapse\" is-nav>\n\t\t\t\t\t<b-navbar-nav small>\n\t\t\t\t\t\t<b-nav-item class=\"h4\">JPP-UI</b-nav-item>\n\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t</b-collapse>\n\t\t\t\t<!-- Right aligned nav items -->\n\t\t\t\t<b-navbar-nav>\n\t\t\t\t\t<b-nav-form>\n\t\t\t\t\t\t<b-form-input size=\"sm\" placeholder=\"Filename\"></b-form-input>\t\t\n\t\t\t\t\t</b-nav-form>\n\t\t\t\t</b-navbar-nav>\n\t\t\t\t<b-navbar-nav class=\"\" small>\n\t\t\t\t\t<b-nav-item @click=\"loadAndCalculate\">Load</b-nav-item>\n\t\t\t\t\t<b-nav-item @click=\"calculateAndGetAll\">Calculate</b-nav-item>\n\t\t\t\t</b-navbar-nav>\n\t\t\t</b-navbar>\n\n\t\t\t<b-tabs>\n\t\t\t\t<b-tab v-for=\"race in races\" \n\t\t\t\t\t:key=\"race.raceNumber\" \n\t\t\t\t>\n\t\t\t\t\t<template #title>\n\t\t\t\t\t\tRace {{race.raceNumber}}&nbsp;\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t<h5 class=\"card-title\">\n\t\t\t\t\t\t\t<span>Race {{race.raceNumber}}</span>\n\t\t\t\t\t\t\t<small v-b-toggle=\"'collapse-'+race.race_id\"> - <u>show/hide details</u></small>\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<b-collapse :id=\"'collapse-'+race.race_id\" visible>\n\t\t\t\t\t\t\t<span class=\"mt-2\">\n\t\t\t\t\t\t\t\t${{race.purse}}, {{race.raceType}}, {{race.surface}}, {{race.furlongs}} Furlongs,\n\t\t\t\t\t\t\t\t{{race.ageRestriction}}, {{race.ageRestrictionRange}}, {{race.sexRestriction}},\n\t\t\t\t\t\t\t\tWagers: {{race.wagerTypes}}, Post Times: {{race.postTimes}}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</b-collapse>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{{race.paceScenario}} - Pars: {{race.parPace2F}}:{{race.parPace4F}}:{{race.parPace6F}}/{{race.parLatePace}}-{{race.parSpeed}} \n\t\t\t\t\t\t\tMaxSpeed: {{race.maxSpeedRating}}, E1Avg: {{race.e1Avg}}, E2Avg: {{race.e2Avg}}, MaxE2: {{race.maxE2}}, LatePaceBestL3: {{race.latePaceBestLast3}}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<b-table\n\t\t\t\t\t\t:items=\"race.horses\"\n\t\t\t\t\t\t:fields=\"horseFields\"\n\t\t\t\t\t\tsmall\n\t\t\t\t\t\tsort-icon-left\n\t\t\t\t\t\t:tbody-tr-class=\"rowClass\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<template #cell(style)=\"data\">\n\t\t\t\t\t\t\t{{ data.item.runStyle }} {{ data.item.speedPoints }}\n\t\t\t\t\t\t</template>\t\n\t\t\t\t\t\t<template #cell(scratchButton)=\"row\">\t\n\t\t\t\t\t\t\t<span v-if=\"!row.item.scratchedFlag\">\t\t\t\n\t\t\t\t\t\t\t\t<b-button\n\t\t\t\t\t\t\t\t\t@click=\"toggleScratch(row.item)\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\tvariant=\"warning\"\n\t\t\t\t\t\t\t\t\tclass=\"mr-1\"\n\t\t\t\t\t\t\t\t\ttitle=\"S\">\n\t\t\t\t\t\t\t\t\t<b-icon-type-strikethrough\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t\t\t\t\t></b-icon-type-strikethrough>\n\t\t\t\t\t\t\t\t</b-button>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span v-if=\"row.item.scratchedFlag\">\t\t\t\n\t\t\t\t\t\t\t\t<b-button\n\t\t\t\t\t\t\t\t\t@click=\"toggleScratch(row.item)\"\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\tclass=\"mr-1\"\n\t\t\t\t\t\t\t\t\ttitle=\"S\">\n\t\t\t\t\t\t\t\t\t<b-icon-type-underline\n\t\t\t\t\t\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t\t\t\t\t></b-icon-type-underline>\n\t\t\t\t\t\t\t\t</b-button>\n\t\t\t\t\t\t\t</span>\t\n\t\t\t\t\t\t</template>\t\n\t\t\t\t\t\t<template #cell(detailsButton)=\"row\">\t\t\t\t\n\t\t\t\t\t\t\t<b-button\n\t\t\t\t\t\t\t\t@click=\"row.toggleDetails\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\n\t\t\t\t\t\t\t\tclass=\"mr-1\"\n\t\t\t\t\t\t\t\ttitle=\"S\">\n\t\t\t\t\t\t\t\t<b-icon-info\n\t\t\t\t\t\t\t\t\taria-hidden=\"true\">\n\t\t\t\t\t\t\t\t></b-icon-info>\n\t\t\t\t\t\t\t</b-button>\n\t\t\t\t\t\t</template>\t\n\t\t\t\t\t\t<template #row-details=\"row\">\n\t\t\t\t\t\t\t<b-container fluid class=\"pp\">\n\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t<b-col cols=\"4\">\n\t\t\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t\t\t<b-col cols=\"1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"h5\"><strong>{{row.item.programNumber}}</strong></span><br>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"h6\">{{row.item.mlodds}}</span><br>\n\t\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"h5\"><strong>{{row.item.name}} ({{row.item.runStyle}} {{row.item.speedPoints}})</strong></span><br>\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Own: {{row.item.owner}}</strong><br>\n\t\t\t\t\t\t\t\t\t\t\t\t{{row.item.ownerSilks}}\n\t\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t<strong>{{row.item.color}}. {{row.item.sex}}. {{row.item.age}} ({{row.item.foalingMonth}})  {{row.item.auctionLocationDate}}  {{formatCurrency(row.item.auctionPrice)}}<br>\n\t\t\t\t\t\t\t\t\t\tSire :  {{row.item.sire}} ({{row.item.siresSire}}) {{formatCurrency(row.item.sireStudFee)}}<br>\n\t\t\t\t\t\t\t\t\t\tDam  :  {{row.item.dam}} ({{row.item.damsSire}})\n\t\t\t\t\t\t\t\t\t\tBrdr :  {{row.item.breeder}}\n\t\t\t\t\t\t\t\t\t\tTrnr :  {{row.item.trainer.name}}  ({{row.item.trainer.currentMeetStarts}} {{row.item.trainer.currentMeetWins}}-{{row.item.trainer.currentMeetPlaces}}-{{row.item.trainer.currentYearShows}} {{row.item.jockey.currentMeetStarts == 0 ? 0 : (row.item.trainer.currentMeetWins/row.item.trainer.currentMeetStarts*100).toFixed(0)}}%)\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col>\n\n\t\t\t\t\t\t\t\t\t</b-col>\n\n\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t{{row.item.jockey.name}} ({{row.item.jockey.currentMeetStarts}} {{row.item.jockey.currentMeetWins}}-{{row.item.jockey.currentMeetPlaces}}-{{row.item.jockey.currentMeetShows}} {{row.item.jockey.currentMeetStarts == 0 ? 0 : (row.item.jockey.currentMeetWins/row.item.jockey.currentMeetStarts*100).toFixed(0)}}%)\n\n\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col>\n\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col>\n\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t</b-row>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</b-container>\n\t\t\t\t\t\t</template>\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t</b-table>\n\n\t\t\t\t</b-tab>\n\t\t\t</b-tabs>\n\n\t\t</b-container>\n\t</div>\n</template>\n\n<script>\nimport { BIconTypeUnderline, BIconTypeStrikethrough, BIconInfo } from 'bootstrap-vue'\n\nimport axios from 'axios'\nimport _ from 'underscore'\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tBIconTypeUnderline, BIconTypeStrikethrough, BIconInfo\n\t},\n\tdata () {\n\t\treturn {\n\t\t\traces: [],\n\t\t\thorseFields: [\n\t\t\t\t{key: \"scratchButton\", label:\"\"},\n\t\t\t\t{key: \"programNumber\", label:\"#\"},\n\t\t\t\t{key: \"mlodds\", \"label\": \"ML\", sortable:true},\n\t\t\t\t\"name\",\n\t\t\t\t{key: \"daysSinceLastRace\", label:\"l/r\", tdClass: this.highlightDaysSince},\n\t\t\t\t{key: \"furlongDays\", label: \"FD\", formatter: this.format2Places, sortable: true},\n\t\t\t\t{key: \"style\", label: \"Style\", tdClass: this.highlightPaceAdvantage },\n\t\t\t\t{key: \"classRating\", label:\"Class\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"speedRating\", label:\"Speed\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"arating\", label: \"AR\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"aratingClass\", label:\"AR Cl\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"aratingForm\", label:\"AR F\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax}, \n\t\t\t\t{key: \"aratingConnections\", label:\"AR Co\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"e1Avg\", label:\"E1\", formatter: this.formatInt, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"e2Avg\", label:\"E2\", formatter: this.formatInt, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"turnTime\", label:\"TT\", formatter: this.formatInt, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"latePaceAvg\", label:\"Late\", formatter: this.formatInt, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"combinedPaceAvg\", label:\"Comb\", formatter: this.format2Places, sortable: true, tdClass: this.highlightMax},\n\t\t\t\t{key: \"classShift\", label:\"cSh\", formatter: this.format2Places, sortable: true, tdClass: this.highlightShift},\n\t\t\t\t{key: \"purseShift\", label:\"pSh\", formatter: this.formatInt, sortable: true, tdClass: this.highlightShift},\n\t\t\t\t{key: \"detailsButton\", label:\"\"},\n\n\t\t\t]\n\t\t}\n\t},\n\tmethods: {\n\t\tasync loadAndCalculate() {\n            try {\n                const response = await axios({\n                    url: 'loadAndCalculate',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\n\t\tasync calculateAndGetAll() {\n            try {\n                const response = await axios({\n                    url: 'calculateAndGetAll',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\t\t\n\t\tasync toggleScratch(item) {\n            try {\n\t\t\t\tvar race = _.find(this.races, function(r){\n\t\t\t\t\treturn r.raceNumber == item.raceNumber;\n\t\t\t\t});\n                await axios({\n                    url: 'toggleScratch/' + race.raceNumber + '/' + item.programNumber,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                item.scratchedFlag = !item.scratchedFlag;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\n\t\trowClass(item, type) {\n\t\t\tif (!item || type !== 'row') return;\n\t\t\tif (item.scratchedFlag) return 'table-dark scratched'\n\t\t\treturn 'notScratched';\n\t\t},\n\t\tformat2Places(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 2, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t}  ,\n\t\tformatInt(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\n\t\tformatCurrency(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: 'USD',\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\t\t\n\t\thighlightMax(value, key, item) {\n\t\t\tvar race = _.find(this.races, function(r){\n\t\t\t\treturn r.raceNumber == item.raceNumber;\n\t\t\t});\n\n\t\t\tvar values = _.pluck(_.reject(race.horses, function(h) {\n\t\t\t\treturn h.scratchedFlag;\n\t\t\t}), key);\n\n\t\t\tif (value == _.max(values)) {\n\t\t\t\treturn \"greenHighlight\";\n\t\t\t}\n\t\t},\n\t\thighlightDaysSince(value) {\n\t\t\tif (value  > 180) return \"gt180\";\n\t\t\tif (value > 90) return \"gt90\";\n\t\t\tif (value >45) return \"gt45\";\n\t\t},\n\t\thighlightPaceAdvantage(value, key, item) {\n\t\t\tvar race = _.find(this.races, function(r){\n\t\t\t\treturn r.raceNumber == item.raceNumber;\n\t\t\t});\n\n\t\t\tif (_.contains(_.pluck(race.advantagedHorses,\"programNumber\"), item.programNumber)) return \"greenHighlight\";\n\t\t},\n\t\thighlightShift(value) {\n\t\t\tif (value < 0) return \"greenHighlight\";\n\t\t\tif (value > 0) return \"yellowHighlight\";\n\t\t\treturn \"\";\n\t\t}\n\t}\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n#filenameform {\n\twidth: 400px;\n}\n.pp {\n\tfont-size: x-small;\n}\n\n.scratched {\n\ttext-decoration: line-through;\n}\n\n.greenHighlight {\n\tbackground-color: greenyellow;\n}\n\n.yellowHighlight {\n\tbackground-color: yellow;\n}\n\n.gt180 {\n\tbackground-color: red;\n}\n\n.gt90 {\n\tbackground-color: rgb(231, 194, 194)\n}\n\n.gt45 {\n\tbackground-color: yellow;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}