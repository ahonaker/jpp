{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { BIconCircleFill } from 'bootstrap-vue';\nimport axios from 'axios';\nimport _ from 'underscore';\nexport default {\n  name: 'RaceView',\n  components: {\n    BIconCircleFill\n  },\n  props: ['horse'],\n  data() {\n    return {};\n  },\n  methods: {\n    async toggleIgnored(item) {\n      try {\n        await axios({\n          url: 'toggleIgnored/' + this.race.raceNumber + '/' + item.programNumber + '/' + item.raceDate[0] + '/' + item.raceDate[1] + '/' + item.raceDate[2],\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        item.ignoredFlag = !item.ignoredFlag;\n        console.log(item);\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    ppRowClass(item, type) {\n      if (!item || type !== 'row') return;\n      var c = \"\";\n      if (item.over365Days) c += \"diff365\";\n      if (item.over90Days && !item.over365Days) c += \"diff90\";\n      if (item.ignoreFlag) c += \" ignored\";\n      return c;\n    },\n    fractionString(decimal) {\n      switch (decimal) {\n        case 0.13:\n          return \"hd\";\n        case 0.25:\n          return \"&frac14;\";\n        case 0.5:\n          return \"&frac12;\";\n        case 0.75:\n          return \"&frac34;\";\n      }\n    },\n    shortenJockeyName(value) {\n      return value.split(\" \")[0] + value.split(\" \")[1].charAt(0);\n    },\n    format2Places(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 2,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 2 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    formatInt(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 0,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    formatCurrency(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 0,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    str_pad_left(string, pad, length) {\n      return (new Array(length + 1).join(pad) + string).slice(-length);\n    },\n    highlightDaysSincePP(value, key, item) {\n      if (item.daysSinceLastRace > 180) return \"gt180\";\n      if (item.daysSinceLastRace > 90) return \"gt90\";\n      if (item.daysSinceLastRace > 45) return \"gt45\";\n    },\n    highlightFinish(value, key, item) {\n      if (item.finishPosition == \"1\") return \"greenHighlight\";\n      if (item.finishPosition == \"2\" || item.finishPosition == \"3\") return \"lightGreenHighlight\";\n    },\n    highlightBeatenFavorite(value, key, item) {\n      if (item.favoriteFlag && item.finishPosition != \"1\") return \"yellowHighlight\";\n    },\n    highlightPurseShift(value, key, item) {\n      if (item.purse >= this.race.purse + 20000) return \"greenHighlight\";\n      if (item.purse > this.race.purse) return \"lightGreenHighlight\";\n      if (item.purse == this.race.purse) return \"\";\n      if (item.purse < this.race.purse - 10000) return \"yellowHighlight\";\n      if (item.purse < this.race.purse - 20000) return \"lightRedHighlight\";\n      if (item.purse < this.race.purse - 30000) return \"redHighlight\";\n    },\n    highlightSpeedInRange(value, key, item) {\n      if (item.brisspeedRating >= this.race.parSpeed) return \"greenHighlight\";\n      if (item.brisspeedRating >= this.race.parSpeed - 3) return \"lightGreenHighlight\";\n    },\n    highlightPaceAdvantage(value, key, item) {\n      if (_.contains(_.pluck(this.race.advantagedHorses, \"programNumber\"), item.programNumber)) return \"greenHighlight\";\n    },\n    highlightShift(value) {\n      if (value < 0) return \"greenHighlight\";\n      if (value > 0) return \"yellowHighlight\";\n    },\n    highlightSimilarSurfDist(value, key, item) {\n      if (this.race.surface.indexOf(\"TURF\") > -1 && !this.race.offTheTurfFlag) {\n        if (item.surface.indexOf(\"TURF\") > -1 && (this.race.trackCondition == \"fm\" && item.trackCondition == \"fm\" || this.race.trackCondition != \"fm\" && [\"tf\", \"gd\", \"gf\", \"hd\", \"yl\", \"sf\", \"hy\", \"sl\"].indexOf(item.trackCondition) > -1) && (this.race.furlongs < 8 && item.furlongs < 8 || this.race.furlongs >= 8 && item.furlongs >= 8)) return \"blueHighlight\";\n      } else {\n        if ((item.surface.indexOf(\"TURF\") == -1 || item.offTheTurfFlag) && (this.race.trackCondition == \"ft\" && item.trackCondition == \"ft\" || this.race.trackCondition != \"ft\" && [\"gd\", \"hy\", \"my\", \"sl\", \"sy\", \"wf\"].indexOf(item.trackCondition) > -1) && (this.race.furlongs < 8 && item.furlongs < 8 || this.race.furlongs >= 8 && item.furlongs >= 8)) return \"blueHighlight\";\n      }\n    },\n    alsoInRace(nameToMatch, row) {\n      var names = _.pluck(this.race.horses, \"name\");\n      if (names.indexOf(nameToMatch) > -1 && nameToMatch != row.name) return \"alsoInRace\";\n    },\n    fastWorkout(workout) {\n      if (Math.floor(Math.abs(workout.timeOfWorkout) / workout.furlongs < 12)) return \"greenHighlight\";\n      if (Math.floor(Math.abs(workout.timeOfWorkout)) == 12 * workout.furlongs) return \"lightGreenHighlightBorder\";\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AAEA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;EACAC;IACA,QACA;EACA;EACAC;IACA;MACA;QACA;UACAC;UACAC;UACAC;QACA;QACAC;QACAC;MACA;QACAA;MAEA;IACA;IACAC;MACA;MACA;MAEA;MACA;MAEA;MAEA;IACA;IACAC;MACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IACAC;MACA;IACA;IACAC;MACA;QAGA;QACAC;QAAA;QACAC;MACA;;MACA;IACA;IACAC;MACA;QAGA;QACAF;QAAA;QACAC;MACA;;MACA;IACA;IACAE;MACA;QACAC;QACAC;QAEA;QACAL;QAAA;QACAC;MACA;;MACA;IACA;IACAK;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACAC;MACA;QACA,IACApB,sCACA,+LACA,+FACA;MACA;QACA,oEACA,mLACA,+FACA;MACA;IACA;IACAqB;MACA;MACA;IAEA;IACAC;MACA;MACA;IACA;EACA;AACA","names":["name","components","BIconCircleFill","props","data","methods","url","method","baseURL","item","console","ppRowClass","fractionString","shortenJockeyName","format2Places","minimumFractionDigits","maximumFractionDigits","formatInt","formatCurrency","style","currency","str_pad_left","highlightDaysSincePP","highlightFinish","highlightBeatenFavorite","highlightPurseShift","highlightSpeedInRange","highlightPaceAdvantage","highlightShift","highlightSimilarSurfDist","alsoInRace","fastWorkout"],"sourceRoot":"src/components","sources":["PastPerformanceView.vue"],"sourcesContent":["<template>\n    <b-table\n        v-if=\"row.item.pastPerformances.length > 0\"\n        :items=\"row.item.pastPerformances\"\n        :fields=\"ppFields\"\n        :tbody-tr-class=\"ppRowClass\"\n        @row-clicked=\"toggleIgnored\"\n    >\n        <template #cell(raceDateString)=\"row\">\n            {{row.item.raceDateString}}<sup>{{row.item.raceNumber}}</sup>\n        </template>\n        <template #cell(dist)=\"row\">\n            <span v-if=\"row.item.distance<0\"><sup>*</sup></span>\n            <span v-if=\"Math.abs(row.item.miles==1.5)\">1&frac12;m</span>\n            <span v-else-if=\"Math.abs(row.item.distance)==1800\">1<sup>40</sup>m</span>\n            <span v-else-if=\"Math.abs(row.item.distance)==1830\">1<sup>70</sup>m</span>\n            <span v-else-if=\"Math.abs(row.item.miles)==1.375\">1&frac38;m</span>\n            <span v-else-if=\"Math.abs(row.item.miles)==1.25\">1&frac14;m</span>\n            <span v-else-if=\"Math.abs(row.item.miles)==1.125\">1&frac18;m</span>\n            <span v-else-if=\"Math.abs(row.item.miles)==1.0625\">1<sup>1</sup>&frasl;<sub>16</sub>m</span>\n            <span v-else-if=\"Math.abs(row.item.miles)==1\">1m</span>\n            <span v-else-if=\"Math.abs(row.item.furlongs)==4.5\">4&frac12;f</span>\n            <span v-else-if=\"Math.abs(row.item.furlongs)==5.5\">5&frac12;f</span>\n            <span v-else-if=\"Math.abs(row.item.furlongs)==6.5\">6&frac12;f</span>\n            <span v-else-if=\"Math.abs(row.item.furlongs)==7.5\">7&frac12;f</span>\n            <span v-else>{{Math.abs(row.item.furlongs)}}f</span>\n        </template>\n        <template #cell(surface)=\"row\">\n            <span v-if=\"row.item.surface == 'INNER_DIRT'\"><b-badge variant=\"secondary\"><b-icon-circle-fill></b-icon-circle-fill></b-badge></span>\n            <span v-if=\"row.item.surface == 'TURF'\"><b-badge pill variant=\"secondary\">&nbsp;T&nbsp;</b-badge></span>\n            <span v-if=\"row.item.surface == 'INNER_TURF'\"><b-badge variant=\"secondary\">&nbsp;T&nbsp;</b-badge></span>\n            <span v-if=\"row.item.allWeatherSurfaceFlag == 'A'\"><b-badge pill variant=\"secondary\">A</b-badge></span>\n            <span v-if=\"row.item.offTheTurfFlag\"><b-badge pill variant=\"secondary\">X</b-badge></span>\n        </template>\n        <template #cell(fraction1)=\"row\">\n            {{Math.floor( row.item.fraction1 / 60)}}:{{str_pad_left(Math.floor(row.item.fraction1 - Math.floor( row.item.fraction1 / 60) * 60),'0',2)}}\n            <sup v-if=\"(Math.floor((row.item.fraction1 % 1) * 5) / 5).toFixed(1) * 5 != 0\">{{(Math.floor((row.item.fraction1 % 1) * 5) / 5).toFixed(1) * 5}}</sup>\n        </template>\t\t\t\t\t\t\t\t\t\n        <template #cell(fraction2)=\"row\">\n            {{Math.floor( row.item.fraction2 / 60)}}:{{str_pad_left(Math.floor(row.item.fraction2 - Math.floor( row.item.fraction2 / 60) * 60),'0',2)}}\n            <sup v-if=\"(Math.floor((row.item.fraction2 % 1) * 5) / 5).toFixed(1) * 5 != 0\">{{(Math.floor((row.item.fraction2 % 1) * 5) / 5).toFixed(1) * 5}}</sup>\n        </template>\t\t\t\t\t\t\t\t\t\n        <template #cell(fraction3)=\"row\">\n            {{Math.floor( row.item.fraction3 / 60)}}:{{str_pad_left(Math.floor(row.item.fraction3 - Math.floor( row.item.fraction3 / 60) * 60),'0',2)}}\n            <sup v-if=\"(Math.floor((row.item.fraction3 % 1) * 5) / 5).toFixed(1) * 5 != 0\">{{(Math.floor((row.item.fraction3 % 1) * 5) / 5).toFixed(1) * 5}}</sup>\n        </template>\n        <template #cell(finalTime)=\"row\">\n            {{Math.floor( row.item.finalTime / 60)}}:{{str_pad_left(Math.floor(row.item.finalTime - Math.floor( row.item.finalTime / 60) * 60),'0',2)}}\n            <sup v-if=\"(Math.floor((row.item.finalTime % 1) * 5) / 5).toFixed(1) * 5 != 0\">{{(Math.floor((row.item.finalTime % 1) * 5) / 5).toFixed(1) * 5}}</sup>\n        </template>\n        <template #cell(raceClassification)=\"row\">\n            <span v-if=\"row.item.raceClassification.substring(0,1) == 's'\"><b-badge variant=\"secondary\">S</b-badge>{{row.item.raceClassification.substring(1)}}</span>\n            <span v-else-if=\"row.item.raceClassification.substring(0,1) == 'f'\"><b-badge variant=\"secondary\">F</b-badge>{{row.item.raceClassification.substring(1)}}</span>\n            <span v-else-if=\"row.item.raceClassification.substring(0,1) == 'r'\"><b-badge variant=\"secondary\">R</b-badge>{{row.item.raceClassification.substring(1)}}</span>\n            <span v-else>{{row.item.raceClassification}}</span>\n        </template>\n        <template #cell(e2)=\"row\">\n            {{row.item.e2}}/\n        </template>\n        <template #cell(raceShapeFirstCall)=\"row\">\n            <span v-if=\"row.item.raceShapeFirstCall > 0\">+</span>{{row.item.raceShapeFirstCall}}\n        </template>\n        <template #cell(raceShapeSecondCall)=\"row\">\n            <span v-if=\"row.item.raceShapeSecondCall > 0\">+</span>{{row.item.raceShapeSecondCall}}\n        </template>\t\t\t\t\t\t\t\t\t\n        <template #cell(firstCallPosition)=\"row\">\n            {{row.item.firstCallPosition}}<sup>{{row.item.firstCallBeatenLengthsLeader.toFixed(2)}}</sup>\n        </template>\t\n        <template #cell(secondCallPosition)=\"row\">\n            {{row.item.secondCallPosition}}<sup>{{row.item.secondCallBeatenLengthsLeader.toFixed(2)}}</sup>\n        </template>\n        <template #cell(stretchPosition)=\"row\">\n            {{row.item.stretchPosition}}<sup>{{row.item.stretchBeatenLengthsLeader.toFixed(2)}}</sup>\n        </template>\t\n        <template #cell(finishPosition)=\"row\">\n            {{row.item.finishPosition}}<sup>{{row.item.finishBeatenLengthsLeader.toFixed(2)}}</sup>\n        </template>\t\n        <template #cell(jockey)=\"row\">\t\n            {{shortenJockeyName(row.item.jockey)}}<sup>{{row.item.weight}}</sup>\n        </template>\t\t\n        <template #cell(medication)=\"row\">\t\n            {{row.item.equipment}}<span v-if=\"row.item.medication == 'LASIX'\">L</span>\n        </template>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n        <template #cell(odds)=\"row\">\t\n            <span v-if=\"row.item.favoriteFlag > 0\"><sup>*</sup></span>{{format2Places(row.item.odds)}}\n        </template>\t\n        <template #cell(finishers)=\"row\">\t\n            <span :class=\"alsoInRace(row.item.winnersName, row.item)\">{{row.item.winnersName}}</span><sup>{{row.item.winnersMargin.toFixed(2)}}</sup>\n            <span :class=\"alsoInRace(row.item.placeName, row.item)\">{{row.item.placeName}}</span><sup>{{row.item.placeMargin.toFixed(2)}}</sup>\n            <span :class=\"alsoInRace(row.item.showName, row.item)\">{{row.item.showName}}</span><sup>{{row.item.showMargin.toFixed(2)}}</sup>\n        </template>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n    </b-table>\n             \n</template>\n\n<script>\nimport { BIconCircleFill } from 'bootstrap-vue'\n\nimport axios from 'axios'\nimport _ from 'underscore'\n\nexport default {\n    name: 'RaceView',\n    components: {\n\t\tBIconCircleFill\n    },\n    props : ['horse'],\n    data () {\n\t\treturn {\n        }\n    },\n    methods:  {\n\t\tasync toggleIgnored(item) {\n            try {\n                await axios({\n                    url: 'toggleIgnored/' + this.race.raceNumber + '/' + item.programNumber + '/' + item.raceDate[0] + '/' + item.raceDate[1] + '/' + item.raceDate[2],\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                item.ignoredFlag = !item.ignoredFlag;\n\t\t\t\tconsole.log(item);\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\t\t\t\n\t\tppRowClass(item, type) {\n\t\t\tif (!item || type !== 'row') return;\n\t\t\tvar c = \"\";\n\t\t\t\n\t\t\tif (item.over365Days) c += \"diff365\";\n\t\t\tif (item.over90Days && !item.over365Days) c += \"diff90\";\n\t\t\t\n\t\t\tif (item.ignoreFlag) c += \" ignored\";\n\t\t\t\n\t\t\treturn c;\n\t\t},\n\t\tfractionString(decimal) {\n\t\t\tswitch(decimal) {\n\t\t\t\tcase 0.13:\n\t\t\t\t\treturn \"hd\";\n\t\t\t\tcase 0.25:\n\t\t\t\t\treturn \"&frac14;\";\n\t\t\t\tcase 0.5:\n\t\t\t\t\treturn \"&frac12;\";\n\t\t\t\tcase 0.75:\n\t\t\t\t\treturn \"&frac34;\";\n\t\t\t}\n\t\t},\n\t\tshortenJockeyName(value) {\n\t\t\treturn value.split(\" \")[0] + value.split(\" \")[1].charAt(0);\n\t\t},\n\t\tformat2Places(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 2, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t}  ,\n\t\tformatInt(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\n\t\tformatCurrency(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: 'USD',\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\t\n\t\tstr_pad_left(string,pad,length) {\n\t\t\treturn (new Array(length+1).join(pad)+string).slice(-length);\n\t\t},\t\n\t\thighlightDaysSincePP(value, key , item) {\n\t\t\tif (item.daysSinceLastRace  > 180) return \"gt180\";\n\t\t\tif (item.daysSinceLastRace > 90) return \"gt90\";\n\t\t\tif (item.daysSinceLastRace > 45) return \"gt45\";\n\t\t},\t\n\t\thighlightFinish(value, key, item) {\n\t\t\tif (item.finishPosition == \"1\") return \"greenHighlight\";\n\t\t\tif (item.finishPosition == \"2\" || item.finishPosition == \"3\") return \"lightGreenHighlight\";\n\t\t},\t\n\t\thighlightBeatenFavorite(value,key,item) {\n\t\t\tif (item.favoriteFlag && item.finishPosition != \"1\") return \"yellowHighlight\";\n\t\t},\n\t\thighlightPurseShift(value,key,item) {\n\t\t\tif (item.purse >= this.race.purse + 20000 ) return \"greenHighlight\";\n\t\t\tif (item.purse > this.race.purse) return \"lightGreenHighlight\";\n\t\t\tif (item.purse == this.race.purse) return \"\";\n\t\t\tif (item.purse < this.race.purse - 10000) return \"yellowHighlight\";\n\t\t\tif (item.purse < this.race.purse - 20000) return \"lightRedHighlight\";\n\t\t\tif (item.purse < this.race.purse - 30000) return \"redHighlight\";\n\t\t},\n\t\thighlightSpeedInRange(value,key,item) {\n\t\t\tif (item.brisspeedRating >= this.race.parSpeed) return \"greenHighlight\";\n\t\t\tif (item.brisspeedRating >= this.race.parSpeed - 3) return \"lightGreenHighlight\";\n\t\t},\n\t\thighlightPaceAdvantage(value, key, item) {\n\t\t\tif (_.contains(_.pluck(this.race.advantagedHorses,\"programNumber\"), item.programNumber)) return \"greenHighlight\";\n\t\t},\n\t\thighlightShift(value) {\n\t\t\tif (value < 0) return \"greenHighlight\";\n\t\t\tif (value > 0) return \"yellowHighlight\";\n\t\t},\n\t\thighlightSimilarSurfDist(value, key, item) {\n\t\t\tif (this.race.surface.indexOf(\"TURF\") > -1 && !this.race.offTheTurfFlag) {\n\t\t\t\tif (\n\t\t\t\t\titem.surface.indexOf(\"TURF\") > -1 \n\t\t\t\t\t&& ((this.race.trackCondition == \"fm\" && item.trackCondition == \"fm\") || (this.race.trackCondition != \"fm\" && [\"tf\",\"gd\",\"gf\",\"hd\",\"yl\",\"sf\",\"hy\",\"sl\"].indexOf(item.trackCondition) > -1))\n\t\t\t\t\t&& ((this.race.furlongs < 8 && item.furlongs < 8) || (this.race.furlongs >= 8 && item.furlongs >= 8))) \n\t\t\t\t\treturn \"blueHighlight\";\n\t\t\t} else {\n\t\t\t\tif ((item.surface.indexOf(\"TURF\") == -1 || item.offTheTurfFlag)\n\t\t\t\t\t&& ((this.race.trackCondition == \"ft\" && item.trackCondition == \"ft\") || (this.race.trackCondition != \"ft\" && [\"gd\",\"hy\",\"my\",\"sl\",\"sy\",\"wf\"].indexOf(item.trackCondition) > -1))\n\t\t\t\t\t&& ((this.race.furlongs < 8 && item.furlongs < 8) || (this.race.furlongs >= 8 && item.furlongs >= 8))) \n\t\t\t\t\treturn \"blueHighlight\";\n\t\t\t}\n\t\t},\n\t\talsoInRace(nameToMatch, row) {\n\t\t\tvar names = _.pluck(this.race.horses, \"name\");\n\t\t\tif (names.indexOf(nameToMatch) > -1 && nameToMatch != row.name) return \"alsoInRace\";\n\n\t\t},\n\t\tfastWorkout(workout) {\n\t\t\tif (Math.floor(Math.abs(workout.timeOfWorkout) / workout.furlongs < 12)) return \"greenHighlight\";\n\t\t\tif (Math.floor(Math.abs(workout.timeOfWorkout)) ==  12 * workout.furlongs) return \"lightGreenHighlightBorder\";\n\t\t}\n    }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}