{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n//import { } from 'bootstrap-vue'\nimport ChartView from '@/components/ChartView';\nimport axios from 'axios';\nimport _ from 'underscore';\nexport default {\n  name: 'App',\n  components: {\n    ChartView\n  },\n  data() {\n    return {\n      nav: \"Races\",\n      races: [],\n      horsesToWatch: [],\n      file: null,\n      pp: \"\",\n      chart: null,\n      charts: [],\n      chartTrack: null,\n      chartDate: null,\n      loading: false,\n      hideML: true,\n      options: {\n        surface: 'all',\n        distance: 'all',\n        condition: 'all'\n      },\n      trackConditions: [{\n        value: \"ft\",\n        text: \"Fast\"\n      }, {\n        value: \"my\",\n        text: \"Muddy\"\n      }, {\n        value: \"wf\",\n        text: \"Wet Fast\"\n      }, {\n        value: \"yl\",\n        text: \"Yielding\"\n      }, {\n        value: \"hy\",\n        text: \"Heavy\"\n      }, {\n        value: \"gd\",\n        text: \"Good\"\n      }, {\n        value: \"sy\",\n        text: \"Sloppy\"\n      }, {\n        value: \"fm\",\n        text: \"Firm\"\n      }, {\n        value: \"sf\",\n        text: \"Soft\"\n      }, {\n        value: \"sl\",\n        text: \"Slow\"\n      }],\n      surfaceOptions: [{\n        value: 'all',\n        text: 'All Surfaces'\n      }, {\n        value: 'same',\n        text: 'Same Surface Only'\n      }, {\n        value: 'off',\n        text: 'Off The Turf'\n      }],\n      distanceOptions: [{\n        value: 'all',\n        text: 'All Distances'\n      }, {\n        value: 'same',\n        text: 'Same Distance Only'\n      }, {\n        value: 'similar',\n        text: 'Similar Distances'\n      }],\n      conditionOptions: [{\n        value: 'all',\n        text: 'All Conditions'\n      }, {\n        value: 'good',\n        text: 'Good'\n      }, {\n        value: 'off',\n        text: 'Off'\n      }, {\n        value: \"my\",\n        text: \"Muddy\"\n      }, {\n        value: \"wf\",\n        text: \"Wet Fast\"\n      }, {\n        value: \"yl\",\n        text: \"Yielding\"\n      }, {\n        value: \"hy\",\n        text: \"Heavy\"\n      }, {\n        value: \"gd\",\n        text: \"Good\"\n      }, {\n        value: \"sy\",\n        text: \"Sloppy\"\n      }, {\n        value: \"sf\",\n        text: \"Soft\"\n      }, {\n        value: \"sl\",\n        text: \"Slow\"\n      }],\n      combinations: [],\n      combinationsText: [],\n      tmA: false,\n      tmAB: true,\n      tmB1: true,\n      tmB2: false,\n      tmC1: true,\n      test: null\n    };\n  },\n  mounted() {\n    this.getHorsesToWatch();\n    this.getCharts();\n  },\n  computed: {\n    chartTracks() {\n      return _.uniq(_.pluck(this.charts, \"track\"));\n    },\n    hasResults() {\n      var has = [];\n      for (var i = 0; i < this.races.length; i++) {\n        has[i] = false;\n        for (var j = 0; j < this.races[i].unscratchedHorses.length; j++) {\n          if (this.races[i].unscratchedHorses[j].finishPosition == 1) has[i] = true;\n        }\n      }\n      return has;\n    },\n    wPayout() {\n      var payout = [];\n      for (var i = 0; i < this.races.length; i++) {\n        payout[i] = 0;\n        for (var j = 0; j < this.races[i].unscratchedHorses.length; j++) {\n          if (this.races[i].unscratchedHorses[j].pick) payout[i] = this.races[i].unscratchedHorses[j].winPayout;\n        }\n      }\n      return payout;\n    },\n    wpPayout() {\n      var payout = [];\n      for (var i = 0; i < this.races.length; i++) {\n        payout[i] = 0;\n        for (var j = 0; j < this.races[i].unscratchedHorses.length; j++) {\n          if (this.races[i].unscratchedHorses[j].pick) payout[i] = this.races[i].unscratchedHorses[j].winPayout + this.races[i].unscratchedHorses[j].placePayout;\n        }\n      }\n      return payout;\n    },\n    wpsPayout() {\n      var payout = [];\n      for (var i = 0; i < this.races.length; i++) {\n        payout[i] = 0;\n        for (var j = 0; j < this.races[i].unscratchedHorses.length; j++) {\n          if (this.races[i].unscratchedHorses[j].pick) payout[i] = this.races[i].unscratchedHorses[j].winPayout + this.races[i].unscratchedHorses[j].placePayout + this.races[i].unscratchedHorses[j].showPayout;\n        }\n      }\n      return payout;\n    },\n    wPayoutSum() {\n      return _.reduce(this.wPayout, function (memo, num) {\n        return memo + num;\n      });\n    },\n    wpPayoutSum() {\n      return _.reduce(this.wpPayout, function (memo, num) {\n        return memo + num;\n      });\n    },\n    wpsPayoutSum() {\n      return _.reduce(this.wpsPayout, function (memo, num) {\n        return memo + num;\n      });\n    },\n    starterFields() {\n      var starterFields = [];\n      for (var i = 0; i < this.chart.length; i++) {\n        var fields = [];\n        fields.push({\n          key: \"lastRaced\",\n          title: \"Last Racesd\",\n          label: \"Last Raced\"\n        });\n        fields.push({\n          key: \"program\",\n          title: \"Program\",\n          label: \"Pgm\"\n        });\n        fields.push({\n          key: \"horsename\",\n          title: \"Horse Name and Jockey\",\n          label: \"Horse Name (Jockey)\"\n        });\n        fields.push({\n          key: \"medicationEquipment.text\",\n          title: \"Medication and Equipment\",\n          label: \"M/E\"\n        });\n        fields.push({\n          key: \"postPosition\",\n          title: \"Post Position\",\n          label: \"PP\"\n        });\n        for (var j = 0; j < this.chart[i].starters[0].pointsOfCall.length; j++) {\n          fields.push({\n            key: \"pointsOfCall\" + j,\n            label: this.chart[i].starters[0].pointsOfCall[j].text\n          });\n        }\n        fields.push({\n          key: \"odds\",\n          title: \"Odds\",\n          label: \"Odds\"\n        });\n        fields.push({\n          key: \"comments\",\n          title: \"Comments\",\n          label: \"Comments\"\n        });\n        fields.push({\n          key: \"note\",\n          title: \"Note\",\n          label: \"Note\"\n        });\n        fields.push({\n          key: \"horseFlag\",\n          title: \"Horse Flag\",\n          label: \"\"\n        });\n        fields.push({\n          key: \"raceFlag\",\n          title: \"Race Flags\",\n          label: \"Flags\"\n        });\n        starterFields.push(fields);\n      }\n      return starterFields;\n    }\n  },\n  methods: {\n    load() {\n      if (this.races.length == 0) {\n        this.uploadAndCalculate();\n      } else {\n        this.$bvModal.msgBoxConfirm(\"Reload and Start Over?\").then(confirmed => {\n          if (confirmed) {\n            this.uploadAndCalculate();\n          }\n        });\n      }\n    },\n    async uploadAndCalculate() {\n      try {\n        this.loading = true;\n        var formData = new FormData();\n        formData.append(\"data\", this.file);\n        formData.append(\"filename\", this.file.name);\n        formData.append(\"distanceOption\", this.options.distance);\n        formData.append(\"surfaceOption\", this.options.surface);\n        formData.append(\"conditionOption\", this.options.condition);\n        const response = await axios({\n          url: 'uploadAndCalculate',\n          method: 'POST',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          data: formData\n        });\n        //console.log(response);\n        this.races = response.data;\n        for (var i = 0; i < this.races.length; i++) {\n          this.combinations[i] = [];\n          this.combinationsText[i] = [];\n          for (var j = 0; j < this.races[i].multiRaceWagers.length; j++) {\n            this.combinations[i][j] = {\n              a: [],\n              b: [],\n              c: []\n            };\n            this.combinationsText[i][j] = {\n              tmA: \"\",\n              tmAB: \"\",\n              tmB1: \"\",\n              tmB2: \"\",\n              tmC1: \"\"\n            };\n          }\n        }\n        this.loading = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async parseCharts() {\n      try {\n        this.loading = true;\n        await axios({\n          url: 'parseDirectory',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.loading = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async augment() {\n      try {\n        this.loading = true;\n        var formData = new FormData();\n        formData.append(\"data\", this.file);\n        formData.append(\"filename\", this.file.name);\n        const response = await axios({\n          url: 'parsePP',\n          method: 'POST',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          data: formData\n        });\n        //console.log(response.data);\n        this.races = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async extractPP() {\n      try {\n        this.loading = true;\n        var formData = new FormData();\n        formData.append(\"data\", this.file);\n        formData.append(\"filename\", this.file.name);\n        const response = await axios({\n          url: 'extractPP',\n          method: 'POST',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          data: formData\n        });\n        //console.log(response.data);\n        this.pp = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async getHorsesToWatch() {\n      try {\n        const response = await axios({\n          url: 'getHorsesToWatch/',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.horsesToWatch = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async getCharts() {\n      try {\n        const response = await axios({\n          url: 'getCharts/',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.charts = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async getChart() {\n      try {\n        this.loading = true;\n        const response = await axios({\n          url: 'getChart/' + this.chartTrack + \"/\" + this.chartDate.getFullYear() + \"/\" + (this.chartDate.getMonth() + 1) + \"/\" + this.chartDate.getDate(),\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.chart = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async save() {\n      try {\n        this.loading = true;\n        await axios({\n          url: 'save/' + this.file.name,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.loading = false;\n        this.$bvModal.msgBoxOk('Races saved.');\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    retrieve() {\n      try {\n        this.$bvModal.msgBoxConfirm(\"Retrieve Saved Races?\").then(async confirmed => {\n          if (confirmed) {\n            this.loading = true;\n            const response = await axios({\n              url: 'retrieve/' + this.file.name,\n              method: 'GET',\n              baseURL: 'http://localhost:8080/jpp/rest/remote/'\n            });\n            this.races = response.data;\n            this.loading = false;\n          }\n        });\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async getChanges() {\n      try {\n        this.loading = true;\n        const response = await axios({\n          url: 'getChanges/',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async getResults() {\n      try {\n        this.loading = true;\n        const response = await axios({\n          url: 'getResults/',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async calculate() {\n      try {\n        this.loading = true;\n        const response = await axios({\n          url: 'calculate/' + this.options.distance + '/' + this.options.surface + '/' + this.options.condition,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async updateCondition(race) {\n      try {\n        this.loading = true;\n        const response = await axios({\n          url: 'setTrackCondition/' + race.raceNumber + '/' + race.trackCondition,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    async toggleOffTheTurf(race) {\n      try {\n        this.loading = true;\n        const response = await axios({\n          url: 'toggleOffTheTurf/' + race.raceNumber,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.races = response.data;\n        this.loading = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    toggleAll(race, b) {\n      _.each(race.horses, async function (horse) {\n        try {\n          horse._showDetails = b;\n          await axios({\n            url: 'toggleShowDetail/' + race.raceNumber + '/' + horse.programNumber,\n            method: 'GET',\n            baseURL: 'http://localhost:8080/jpp/rest/remote/'\n          });\n        } catch (err) {\n          console.log(err);\n        }\n      });\n    },\n    async setRaceNote(race) {\n      try {\n        this.loading = true;\n        var formData = new FormData();\n        formData.append(\"raceNumber\", race.raceNumber);\n        formData.append(\"note\", race.note);\n        await axios({\n          url: 'setRaceNote',\n          method: 'POST',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          data: formData\n        });\n        //console.log(response);\n        this.loading = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async saveNotes() {\n      try {\n        this.loading = true;\n        var races = [];\n        for (var i = 0; i < this.chart.length; i++) {\n          var notes = [];\n          for (var j = 0; j < this.chart[i].starters.length; j++) {\n            if (this.chart[i].starters[j].paceScenarioComment || this.chart[i].starters[j].raceFlag != null || this.chart[i].starters[j].horseFlag) notes.push({\n              program: this.chart[i].starters[j].program,\n              name: this.chart[i].starters[j].horse.name,\n              position: this.chart[i].starters[j].finishPosition,\n              beatenLengths: this.chart[i].starters[j].finishPosition == 1 ? 0 : this.chart[i].starters[j].pointsOfCall[this.chart[i].starters[j].pointsOfCall.length - 1].relativePosition.totalLengthsBehind.lengths,\n              note: this.chart[i].starters[j].raceNote,\n              raceFlag: this.chart[i].starters[j].raceFlag,\n              horseFlag: this.chart[i].starters[j].horseFlag\n            });\n          }\n          if (notes.length > 0) races.push({\n            track: this.chart[i].track.code,\n            raceDate: this.chart[i].raceDate,\n            raceNumber: this.chart[i].raceNumber,\n            starters: notes\n          });\n        }\n        console.log(races);\n        var formData = new FormData();\n        formData.append(\"notes\", JSON.stringify(races));\n        await axios({\n          url: 'saveNotes',\n          method: 'POST',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/',\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          data: formData\n        });\n        //console.log(response);\n        this.loading = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    formatCurrency(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 0,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    formatCurrency2(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n\n        // These options are needed to round to whole numbers if that's what you want.\n        //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    formatDate(date) {\n      return date[1] + \"/\" + date[2] + \"/\" + date[0];\n    },\n    tmGenerate(results) {\n      for (var i = 0; i < this.races.length; i++) {\n        for (var j = 0; j < this.races[i].multiRaceWagers.length; j++) {\n          this.races[i].multiRaceWagers[j] = results[i][j];\n        }\n      }\n      this.races.splice();\n    },\n    comboCheck(arr, n) {\n      console.log(arr);\n      console.log(n);\n      arr[n] = !arr[n];\n    },\n    async togglePick(horse) {\n      try {\n        console.log(horse);\n        await axios({\n          url: 'togglePick/' + horse.raceNumber + '/' + horse.programNumber,\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        horse.pick = false;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    paceScenarioComment(scenario) {\n      switch (scenario) {\n        case \"FAST_EARLY_PACE\":\n          return 'These races will be run very fast to the second call because there are multiple “E” horses all trying to get the lead. Very often these “E” horses burn each other out setting the race up for a winner from off the pace. The first thing to do is to determine if one of the “E” horses is a good horse and has a strong BRIS or Hall Early Pace figure advantage over the other “E” horse(s). If there is such a powerful “E” horse, then you can forget the other “E” horses as they will probably finish out-of-the-money. If the dominant “E” horse is one of the top horses of all the horses in the race, it may well go gate-to-wire. However, such a dominant “E” horse has been severely compromised by all the pressure from the other “E” horse(s) in the race and could easily be passed by a horse coming from off the pace. If the dominant “E” horse is passed early in the stretch, it will most likely finish out of the money.' + 'If there is no dominant “E” horse in the race, the chances are high that all the “E” horses will finish off the board. These races are generally won by good “EP” and “P” horses and sometimes by a good “S” horse. The key is to look for a good horse with the best Final Fraction pace rating.';\n        case \"LONE_EARLY_PACE\":\n          return 'There may be no more dangerous horse than a good “E” or “EP” horse that figures to be loose on the lead. These horses are left alone to optimize the pace of the race for themselves. A good “E” or “EP” horse loose on the lead will, more often than not, win the race. Even apparently poor “E” and “EP” horses can “wake up” in this situation and unexpectedly wire the field at big mutuel payoffs. These apparently poor horses are a particularly good play if they have an ALL-Ways software workout rating of 1 or 2. As a “golden rule”, never ignore an “E” or “EP” horse in Lone Early Pace races. Look for the best good “P” and “S” horses to finish in-the-money. Pay particular attention to those with the best Final Fraction Pace figures.';\n        case \"HONEST_PACE\":\n          return 'Most races fall into this category. While a “P” or “S” horse can certainly win such a race, they generally need a faster pace to set the race up for their late stretch run. These races tend to favor “E” and “EP” horses. In an E-EP shaped race, if a good “EP” horse has a Speed or Combined Pace rating better than the “E” horse, it will generally pass the “E” horse in the stretch run. If the “EP” horse also has an Early Pace rating that is superior to the “E” horse, it will generally pass the “E” horse early in the stretch run causing the “E” horse to finish off-the-board. EP-EP shape races lend themselves nicely to traditional form, class and speed handicapping. Note that a prevailing track pace bias tends to have the most influence on EP-EP races.';\n        case 'SLOW_PACE':\n          return 'These races, as expected, tend to be run very slow to the second call because no horse in the field wants to be anywhere close to the lead. These races are generally won by good “P” or “S” horses with superior Combined Pace and/or Speed ratings. However, there is a solid spot play to look for that can yield large mutuel payoffs. While none of the horses wants the lead, one of them is going to get it and, more often than not, it is the “P” horse with the fastest Early Pace figure. Frequently, such a “P” horse is able to move into the lead by three to five lengths or more and hold on for a gate-to-wire win. An astute trainer will spot this opportunity and instruct the jockey to go right for the lead. You have probably heard the term “stole the race”. This often is what happens with a “P” horse in a Slow Pace race or a lone “EP” or “E” horse in a Lone Early Pace race as described earlier.';\n      }\n    },\n    str_pad_left(string, pad, length) {\n      return (new Array(length + 1).join(pad) + string).slice(-length);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgXA;AACA;AAEA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC,kBACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC,iBACA;QAAAF;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAE,kBACA;QAAAH;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAG,mBACA;QAAAJ;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAI;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA;QACAC;QACA;UACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACAC;QACA;UACA;QACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACAD;QACA;UACA,wGACA;QACA;MACA;MACA;IACA;IACAE;MACA;MACA;QACAF;QACA;UACA,wGACA,iDACA;QACA;MACA;MACA;IACA;IACAG;MACA;QAAA;MAAA;IACA;IACAC;MACA;QAAA;MAAA;IACA;IACAC;MACA;QAAA;MAAA;IACA;IACAC;MACA;MAGA;QACA;QACAC;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACA;UACAH;YACAC;YACAE;UACA;QACA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAH;UAAAC;UAAAC;UAAAC;QAAA;QACAJ;MACA;MACA;IAEA;EACA;EACAK;IACAC;MACA;QACA;MACA;QACA,sDACAC;UACA;YACA;UACA;QACA;MACA;IACA;IACA;MACA;QACA;QACA;QACAC;QACAA;QACAA;QACAA;QACAA;QACA;UACAC;UACAC;UACAC;UACAC;YACA;UACA;UACAtD;QACA;QACA;QACA;QAEA;UACA;UACA;UACA;YACA;cAAAuD;cAAAC;cAAAC;YAAA;YACA;cAAAjC;cAAAC;cAAAC;cAAAC;cAAAC;YAAA;UACA;QACA;QACA;MACA;QACA8B;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;QACAR;QACAA;QACA;UACAC;UACAC;UACAC;UACAC;YACA;UACA;UACAtD;QACA;QACA;QACA;QACA;MACA;QACA0D;MAEA;IACA;IACA;MACA;QACA;QACA;QACAR;QACAA;QACA;UACAC;UACAC;UACAC;UACAC;YACA;UACA;UACAtD;QACA;QACA;QACA;QACA;MACA;QACA0D;MAEA;IACA;IACA;MACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACAC;MACA;QACA,qDACAV;UACA;YACA;YACA;cACAE;cACAC;cACAC;YACA;YACA;YACA;UACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACA;MACA;QACA;QACA;UACAP;UACAC;UACAC;QACA;QACA;QACA;MACA;QACAK;MAEA;IACA;IACAE;MACAC;QACA;UACAC;UACA;YACAX;YACAC;YACAC;UACA;QACA;UACAK;QAEA;MACA;IACA;IACA;MACA;QACA;QACA;QACAR;QACAA;QACA;UACAC;UACAC;UACAC;UACAC;YACA;UACA;UACAtD;QACA;QACA;QACA;MACA;QACA0D;MAEA;IACA;IACA;MACA;QACA;QACA;QACA;UACA;UACA;YACA,qDACA,8CACA,qCACAK;cACAC;cACAnE;cACAoE;cACAC;cACAC;cACAC;cACAC;YACA;UACA;UACA,sBACAnE;YACAoE;YACAC;YACAC;YACAC;UACA;QACA;QACAf;QAEA;QACAR;QACA;UACAC;UACAC;UACAC;UACAC;YACA;UACA;UACAtD;QACA;QACA;QACA;MACA;QACA0D;MAEA;IACA;IACAgB;MACA;QACAC;QACAC;QAEA;QACAC;QAAA;QACAC;MACA;;MACA;IACA;IACAC;MACA;QACAJ;QACAC;;QAEA;QACA;QACA;MACA;;MACA;IACA;IACAI;MACA;IACA;IACAC;MACA;QACA;UACA;QACA;MACA;MACA;IACA;IACAC;MACAxB;MACAA;MACAyB;IACA;IACA;MACA;QACAzB;QACA;UACAP;UACAC;UACAC;QACA;QACAS;MAEA;QACAJ;MAEA;IACA;IACA0B;MACA;QACA;UACA,85BACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","ChartView","data","nav","races","horsesToWatch","file","pp","chart","charts","chartTrack","chartDate","loading","hideML","options","surface","distance","condition","trackConditions","value","text","surfaceOptions","distanceOptions","conditionOptions","combinations","combinationsText","tmA","tmAB","tmB1","tmB2","tmC1","test","mounted","computed","chartTracks","hasResults","has","wPayout","payout","wpPayout","wpsPayout","wPayoutSum","wpPayoutSum","wpsPayoutSum","starterFields","fields","key","title","label","methods","load","then","formData","url","method","baseURL","headers","a","b","c","console","retrieve","toggleAll","_","horse","notes","program","position","beatenLengths","note","raceFlag","horseFlag","track","raceDate","raceNumber","starters","formatCurrency","style","currency","minimumFractionDigits","maximumFractionDigits","formatCurrency2","formatDate","tmGenerate","comboCheck","arr","paceScenarioComment","str_pad_left"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<b-container fluid>\n\t\t\t<b-navbar id=\"nav\" toggleable=\"sm\" class=\"py-2\" >\t\t\t\t\t\t\n\t\t\t\t<b-collapse id=\"nav-collapse\" is-nav>\n\t\t\t\t\t<b-navbar-nav small class=\"align-items-center\">\n\t\t\t\t\t\t<b-nav-item class=\"brand\"><span v-if=\"loading\">Loading...</span><span v-else>JPP-UI</span></b-nav-item>\n\t\t\t\t\t\t<b-nav-item @click=\"nav = 'Races'\">Races</b-nav-item>\n\t\t\t\t\t\t<b-nav-item @click=\"nav = 'Admin'\">Admin</b-nav-item>\n\t\t\t\t\t\t<b-nav-item @click=\"nav = 'Horses'\">Horses</b-nav-item>\n\t\t\t\t\t\t<b-nav-item @click=\"nav = 'Charts'\">Charts</b-nav-item>\n\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t</b-collapse>\n\t\t\t\t<!-- Right aligned nav items -->\n\t\t\t\t<b-navbar-nav>\n\t\t\t\t\t<b-nav-form>\n\t\t\t\t\t\t<b-form-file\n\t\t\t\t\t\t\tid=\"filenameform\"\n\t\t\t\t\t\t\tsize=\"sm\" \n\t\t\t\t\t\t\tv-model=\"file\"\n\t\t\t\t\t\t\t:state=\"Boolean(file)\"\n\t\t\t\t\t\t\tplaceholder=\"Choose or drop here...\"\n\t\t\t\t\t\t\tdrop-placeholder=\"Drop file here...\"\n\t\t\t\t\t\t\tclass=\"text-left\"\n\t\t\t\t\t\t></b-form-file>\n\t\t\t\t\t</b-nav-form>\n\t\t\t\t</b-navbar-nav>\t\t\t\t\n\t\t\t\t<b-navbar-nav small>\n\t\t\t\t\t<b-nav-item :disabled=\"!file\" @click=\"load\">Load</b-nav-item>\n\t\t\t\t\t<b-nav-item :disabled=\"races.length == 0 || !file\" @click=\"augment\">Augment</b-nav-item>\t\t\t\t\t\n\t\t\t\t\t<b-nav-item :disabled=\"races.length == 0\" @click=\"getChanges\">Get Changes</b-nav-item>\n\t\t\t\t\t<b-nav-item :disabled=\"races.length == 0\" @click=\"getResults\">Get Results</b-nav-item>\t\t\t\t\t\n\t\t\t\t\t<b-nav-item :disabled=\"races.length == 0\" @click=\"calculate\">Calculate</b-nav-item>\n\t\t\t\t\t<b-nav-item :disabled=\"races.length == 0\" @click=\"save\">Save</b-nav-item>\t\t\t\n\t\t\t\t\t<b-nav-item :disabled=\"!file\" @click=\"retrieve\">Retrieve</b-nav-item>\t\n\t\t\t\t</b-navbar-nav>\n\t\t\t</b-navbar>\n\n\t\t\t<b-tabs v-show=\"nav == 'Races'\">\n\t\t\t\t<b-tab v-for=\"(race, racekey) in races\" :key=\"racekey\">\n\t\t\t\t\t<template #title>\n\t\t\t\t\t\tRace {{race.raceNumber}}&nbsp;\n\t\t\t\t\t</template>\n\n\t\t\t\t\t<div class=\"card-body\">\n\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t<b-col class=\"text-left\">\n\t\t\t\t\t\t\t\t\t<h5 class=\"card-title\">\n\t\t\t\t\t\t\t\t\t\t<span>Race {{race.raceNumber}}</span>\n\t\t\t\t\t\t\t\t\t\t<small v-b-toggle=\"'collapse-'+race.race_id\"> - <u>show/hide details</u></small>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col v-if=\"hasResults[racekey]\" class=\"text-right\">\n\t\t\t\t\t\t\t\t\t<a \n\t\t\t\t\t\t\t\t\t\t:href=\"'https://www.twinspires.com/bet/product/download/INC/TB/' \n\t\t\t\t\t\t\t\t\t\t\t+ race.track + '/'\n\t\t\t\t\t\t\t\t\t\t\t+ race.date[0] + '-' + str_pad_left(race.date[1],0,2) + '-' + str_pad_left(race.date[2],0,2) \n\t\t\t\t\t\t\t\t\t\t\t+ '/D/' + race.raceNumber\" \n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"            \n\t\t\t\t\t\t\t\t\t><b-icon-bar-chart-steps></b-icon-bar-chart-steps>\n\t\t\t\t\t\t\t\t\t</a>&nbsp;\n\t\t\t\t\t\t\t\t\t<a \n\t\t\t\t\t\t\t\t\t\t:href=\"'https://www.twinspires.com/bet/video/replay/'\n\t\t\t\t\t\t\t\t\t\t\t+ race.date[0] + '-' + str_pad_left(race.date[1],0,2) + '-' + str_pad_left(race.date[2],0,2) \n\t\t\t\t\t\t\t\t\t\t\t+ '/' + race.track\n\t\t\t\t\t\t\t\t\t\t\t+ '/Thoroughbred/' + race.raceNumber\" \n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"  \n\t\t\t\t\t\t\t\t\t><b-icon-camera-video-fill></b-icon-camera-video-fill>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t<b-collapse :id=\"'collapse-'+race.race_id\" visible>\n\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t<b-col v-b-tooltip.hover.right :title=\"race.raceConditions\" cols=\"5\">\n\t\t\t\t\t\t\t\t\t\t${{race.purse}} <span  v-b-toggle=\"'collapseNotes-'+race.race_id\">{{race.classification}}</span>\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col cols=\"2\" class=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t{{race.surface}} <span v-if=\"race.distance<0\"><sup>*</sup></span>\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"Math.abs(race.miles==1.5)\">1&frac12; Miles</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.distance)==1800\">1<sup>40</sup> Miles</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.distance)==1830\">1<sup>70</sup> Miles</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.miles)==1.375\">1&frac38; Miles</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.miles)==1.25\">1&frac14; Miles</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.miles)==1.125\">1&frac18; Miles</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.miles)==1.0625\">1<sup>1</sup>&frasl;<sub>16</sub> Mile</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.miles)==1\">1 Mile</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.furlongs)==4.5\">4&frac12; Furlongs</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.furlongs)==5.5\">5&frac12; Furlongs</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.furlongs)==6.5\">6&frac12; Furlongs</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"Math.abs(race.furlongs)==7.5\">7&frac12; Furlongs</span>\n\t\t\t\t\t\t\t\t\t\t<span v-else>{{Math.abs(race.furlongs)}} Furlongs</span>\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col cols=\"5\" class=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"race.sexRestriction == 'FILLIES_AND_MARES'\">Fillies & Mares </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.sexRestriction == 'FILLIES'\">Fillies </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.sexRestriction == 'COLTS_AND_GELDINGS'\">Colts & Geldings </span>\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"race.ageRestriction == 'TWO_YEAR_OLDS'\">Two Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.ageRestriction == 'THREE_YEAR_OLDS'\">Three Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.ageRestriction == 'FOUR_YEAR_OLDS'\">Four Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.ageRestriction == 'FIVE_YEAR_OLDS'\">Five Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.ageRestriction == 'THREE_AND_FOUR_YEAR_OLDS'\">Three & Four Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.ageRestriction == 'FOUR_AND_FIVE_YEAR_OLDS'\">Four & Five Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-else-if=\"race.ageRestriction == 'THREE_FOUR_AND_FIVE_YEAR_OLDS'\">Three, Four & Five Year Olds </span>\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"race.ageRestrictionRange != 'ALL_AGES' && race.ageRestrictionRange == 'THAT_AGE_AND_UP'\">And Upward </span>\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t<b-collapse :id=\"'collapseNotes-'+race.race_id\" visible>\n\t\t\t\t\t\t\t\t\t<b-row class = \"border text-info m-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"12\">\n\t\t\t\t\t\t\t\t\t\t\t<span v-for=\"(note, index) in race.handicappingNotes\" :key=\"index\">{{note}}<br></span>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t</b-collapse>\n\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t<b-col cols=\"10\">\n\t\t\t\t\t\t\t\t\t\t{{race.wagerTypes}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t<b-col class=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t{{race.postTimes}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t</b-collapse>\n\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t<b-col cols=\"12\">\n\t\t\t\t\t\t\t\t\t<span v-for=\"(change, index) in race.changes\" :key=\"index\" class=\"text-danger\">\n\t\t\t\t\t\t\t\t\t\t<span v-if=\"change.indexOf('scratched') == -1\">{{change}}; </span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t<b-col class=\"text-left\">\n\t\t\t\t\t\t\t\t\tMaxSpeed: {{race.maxSpeed}}\n\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<b-col class=\"text-center\">\n\t\t\t\t\t\t\t\t\tMaxE1Avg: {{race.e1Avg}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col class=\"text-center\">\n\t\t\t\t\t\t\t\t\tMaxE2Avg: {{race.e2Avg}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col class=\"text-center\">\n\t\t\t\t\t\t\t\t\tMaxE2: {{race.maxE2}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col class=\"text-right\">\n\t\t\t\t\t\t\t\t\tLatePaceBestL3: {{race.latePaceBestLast3}}\n\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<b-col class=\"text-center\" v-b-toggle=\"'collapseScenario-'+race.race_id\">\n\t\t\t\t\t\t\t\t\t{{race.paceScenario}}\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col cols=\"2\" class=\"text-right\">\n\t\t\t\t\t\t\t\t\tPars: {{race.furlongs &lt; 8 ? race.parPace2F : race.parPace4F}} {{race.furlongs &lt; 8 ? race.parPace4F : race.parPace6F}} / {{race.parLatePace}} - {{race.parSpeed}} \n\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t<b-collapse :id=\"'collapseScenario-'+race.race_id\">\n\t\t\t\t\t\t\t\t<b-row class=\"border m-2 text-info\">\n\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t{{paceScenarioComment(race.paceScenario)}}\n\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t</b-collapse>\n\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t<b-col cols=\"10\">\n\t\t\t\t\t\t\t\t\t<b-form-textarea\n\t\t\t\t\t\t\t\t\t\tsizae=\"sm\"\n\t\t\t\t\t\t\t\t\t\tv-model=\"race.note\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter something...\"\n\t\t\t\t\t\t\t\t\t\tmax-rows=\"4\"\n\t\t\t\t\t\t\t\t\t></b-form-textarea>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t<b-button size=\"sm\" class=\"my-3\" variant=\"primary\" @click=\"setRaceNote(race)\"><b-icon-cloud-upload-fill></b-icon-cloud-upload-fill></b-button>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t<b-row v-if=\"hasResults[racekey]\">\n\t\t\t\t\t\t\t\t<b-col :class = \"(wPayout[racekey] > 0) ? 'text-success' : 'text-danger'\">\n\t\t\t\t\t\t\t\t\t$2 Win: <span v-b-tooltip.hover :title=\"formatCurrency2(wPayoutSum)\">{{formatCurrency2(wPayout[racekey])}}</span>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col :class = \"(wpPayout[racekey] > 0) ? 'text-success' : 'text-danger'\">\n\t\t\t\t\t\t\t\t\t$2 WP: <span v-b-tooltip.hover :title=\"formatCurrency2(wpPayoutSum)\">{{formatCurrency2(wpPayout[racekey])}}</span>\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t<b-col :class = \"(wpsPayout[racekey] > 0) ? 'text-success' : 'text-danger'\">\n\t\t\t\t\t\t\t\t\t$2 WPS: <span v-b-tooltip.hover :title=\"formatCurrency2(wpsPayoutSum)\">{{formatCurrency2(wpsPayout[racekey])}}</span>\n\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<b-navbar id=\"nav\" class=\"py-2\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- Right aligned nav items -->\n\t\t\t\t\t\t\t<b-navbar-nav>\n\t\t\t\t\t\t\t\t<b-nav-form>\n\t\t\t\t\t\t\t\t\t<b-form-select v-model=\"race.trackCondition\" :options=\"trackConditions\" @change=\"updateCondition(race)\"></b-form-select>\t\t\n\t\t\t\t\t\t\t\t\t<b-form-checkbox switch class=\"m-2\" v-if=\"race.surface.indexOf('TURF') > -1\" v-model=\"race.offTheTurfFlag\" @change=\"toggleOffTheTurf(race)\">Off</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t<b-form-select class=\"m-2\" v-model=\"options.distance\" :options=\"distanceOptions\" @change=\"calculate\"></b-form-select>\n\t\t\t\t\t\t\t\t\t<b-form-select class=\"m-2\" v-model=\"options.surface\" :options=\"surfaceOptions\" @change=\"calculate\"></b-form-select>\n\t\t\t\t\t\t\t\t\t<b-form-select class=\"m-2\" v-model=\"options.condition\" :options=\"conditionOptions\" @change=\"calculate\"></b-form-select>\t\n\t\t\t\t\t\t\t\t\t<b-form-checkbox switch class=\"m-2\" v-model=\"hideML\">Hide ML</b-form-checkbox>\n\t\t\t\t\t\t\t\t</b-nav-form>\n\t\t\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t\t\t\t<b-navbar-nav class=\"ml-auto\" small>\n\t\t\t\t\t\t\t\t<b-nav-item v-if=\"race.multiRaceWagers.length > 0\" v-b-toggle.ticketmaker><b-icon-cash-stack font-scale=\"2\"></b-icon-cash-stack></b-nav-item>\n\t\t\t\t\t\t\t\t<b-nav-item @click=\"toggleAll(race, true)\"><b-icon-plus font-scale=\"2\"></b-icon-plus></b-nav-item>\n\t\t\t\t\t\t\t\t<b-nav-item @click=\"toggleAll(race, false)\"><b-icon-dash font-scale=\"2\"></b-icon-dash></b-nav-item>\n\t\t\t\t\t\t\t</b-navbar-nav>\n\t\t\t\t\t\t</b-navbar>\t\t\n\n\t\t\t\t\t\t<b-collapse v-if=\"race.multiRaceWagers.length > 0\" id=\"ticketmaker\" class=\"mt-2\">\n\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t<b-col v-for=\"wager in race.multiRaceWagers\" :key=\"wager.name\">\n\t\t\t\t\t\t\t\t\t<b-row>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"\" class=\"text-center\">\t\n\t\t\t\t\t\t\t\t\t\t\t<h6>{{wager.name}} ({{formatCurrency2(wager.min)}}) ({{wager.firstRace}}-{{wager.firstRace + wager.numRaces - 1}})</h6>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"3\">\n\t\t\t\t\t\t\t\t\t\t\tTotal\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"4\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>{{formatCurrency2(\n\t\t\t\t\t\t\t\t\t\t\t\t(tmA ? wager.tmACost : 0) +\n\t\t\t\t\t\t\t\t\t\t\t\t(tmAB ? wager.tmABCost : 0) +\n\t\t\t\t\t\t\t\t\t\t\t\t(tmB1 ? wager.tmB1Cost : 0) +\n\t\t\t\t\t\t\t\t\t\t\t\t(tmB2 ? wager.tmB2Cost : 0) +\n\t\t\t\t\t\t\t\t\t\t\t\t(tmC1 ? wager.tmC1Cost : 0)\n\t\t\t\t\t\t\t\t\t\t\t\t)}}</strong>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"3\">\n\t\t\t\t\t\t\t\t\t\t\t<b-form-checkbox v-model=\"tmA\">All As</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"7\" >\n\t\t\t\t\t\t\t\t\t\t\t<strong>{{formatCurrency2(wager.tmACost)}}</strong>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col v-if=\"wager.tmA\">\n\t\t\t\t\t\t\t\t\t\t\t<b-button size=\"sm\" class=\"my-1\" :variant=\"wager.tmAchecked ? 'success' : 'outline-dark'\" @click=\"wager.tmAchecked = !wager.tmAchecked; races.splice()\">{{wager.tmA}}</b-button>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"3\">\n\t\t\t\t\t\t\t\t\t\t\t<b-form-checkbox v-model=\"tmAB\">All As & Bs</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"7\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>{{formatCurrency2(wager.tmABCost)}}</strong>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col v-if=\"wager.tmAB\">\n\t\t\t\t\t\t\t\t\t\t\t<b-button size=\"sm\" class=\"my-1\" :variant=\"wager.tmABchecked ? 'success' : 'outline-dark'\" @click=\"wager.tmABchecked = !wager.tmABchecked; races.splice()\">{{wager.tmAB}}</b-button>\n\t\t\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"3\">\n\t\t\t\t\t\t\t\t\t\t\t<b-form-checkbox v-model=\"tmB1\">All As & One B</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"7\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>{{formatCurrency2(wager.tmB1Cost)}}</strong>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t\t<span v-for=\"(combo,n) in wager.tmB1\" :key=\"n\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b-button size=\"sm\" class=\"my-1\" :variant=\"wager.tmB1checked[n] ? 'success' : 'outline-dark'\" @click=\"wager.tmB1checked[n] = !wager.tmB1checked[n]; races.splice()\">{{combo}}</b-button><br>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"3\">\n\t\t\t\t\t\t\t\t\t\t\t<b-form-checkbox v-model=\"tmB2\">All As & Two Bs</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"7\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>{{formatCurrency2(wager.tmB2Cost)}}</strong>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t\t<span v-for=\"(combo,n) in wager.tmB2\" :key=\"n\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b-button size=\"sm\" class=\"my-1\" :variant=\"wager.tmB2checked[n] ? 'success' : 'outline-dark'\" @click=\"wager.tmB2checked[n] = !wager.tmB2checked[n]; races.splice()\">{{combo}}</b-button><br>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</b-col>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t\t\t\t<b-row class=\"my-2\">\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"3\">\n\t\t\t\t\t\t\t\t\t\t\t<b-form-checkbox v-model=\"tmC1\">All As & 1 C</b-form-checkbox>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col cols=\"7\">\n\t\t\t\t\t\t\t\t\t\t\t<strong>{{formatCurrency2(wager.tmC1Cost)}}</strong>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t\t<b-col>\n\t\t\t\t\t\t\t\t\t\t\t<span v-for=\"(combo,n) in wager.tmC1\" :key=\"n\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b-button size=\"sm\" class=\"my-1\" :variant=\"wager.tmC1checked[n] ? 'success' : 'outline-dark'\" @click=\"wager.tmC1checked[n] = !wager.tmC1checked[n]; races.splice()\">{{combo}}</b-button><br>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t\t\t</b-row>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</b-col>\n\t\t\t\t\t\t\t</b-row>\n\t\t\t\t\t\t</b-collapse>\n\t\t\t\t\t<horse-view :race=\"race\" :hideML=\"hideML\" @selectionUpdate=\"tmGenerate\" @togglePick=\"togglePick\"></horse-view>\n\t\t\t\t</b-tab>\n\t\t\t</b-tabs>\n\n\t\t\t<div v-show=\"nav == 'Admin'\" class=\"mx-5\">\n\t\t\t\t<b-row>\n\t\t\t\t\t<b-col>\n\t\t\t\t\t\t<b-button variant=\"primary\" @click=\"parseCharts\">Parse Charts</b-button>\n\t\t\t\t\t</b-col>\n\t\t\t\t\t<b-col>\n\t\t\t\t\t\t<b-button variant=\"secondary\" @click=\"extractPP\">Extract PP</b-button>\t\t\t\t\n\t\t\t\t\t</b-col>\n\t\t\t\t</b-row>\n\t\t\t\t<b-row>\n\t\t\t\t\t<b-col>\n\t\t\t\t\t\t<span v-for=\"(line, index) in pp\" :key=\"index\">{{line}}<br></span>\n\t\t\t\t\t</b-col>\n\t\t\t\t</b-row>\n\t\t\t</div>\n\n\t\t\t<div v-show=\"nav == 'Horses'\" class=\"mx-5\">\n\t\t\t\t<b-row v-for=\"(horse, hindex) in horsesToWatch\" :key=\"hindex\">\n\t\t\t\t\t<b-col>\n\t\t\t\t\t<h5>{{horse.name}}</h5>\n\t\t\t\t\t{{horse.comment}}\n\t\t\t\t\t<b-row v-for=\"(raceNote, rindex) in horse.raceNotes\" :key=\"rindex\">\n\t\t\t\t\t\t<b-col offset=\"2\">\n\t\t\t\t\t\t<h6>{{horse.name}} @ {{raceNote.track}} in Race {{raceNote.raceNumber}} on <span v-if=\"raceNote.date != null\">{{formatDate(raceNote.raceDate)}}</span> - Finish: {{raceNote.position}} BL: {{raceNote.beatenLengths}}</h6>\n\t\t\t\t\t\t{{raceNote.comment}}\n\t\t\t\t\t\t</b-col>\n\t\t\t\t\t</b-row>\n\t\t\t\t\t</b-col>\n\t\t\t\t</b-row>\n\t\t\t</div>\n\n\t\t\t<div v-show=\"nav == 'Charts'\" class=\"mx-5\">\n\t\t\t\t<b-row>\n\t\t\t\t\t<b-col>\n\t\t\t\t\t\t<b-form inline>\n\t\t\t\t\t\t\t<label class=\"\" for=\"chartTrack\">Track</label>\n\t\t\t\t\t\t\t<b-form-select\n\t\t\t\t\t\t\t\tid=\"chartTrack\"\n\t\t\t\t\t\t\t\tclass=\"mx-2\"\n\t\t\t\t\t\t\t\t:options=\"chartTracks\"\n\t\t\t\t\t\t\t\tv-model=\"chartTrack\"\n\t\t\t\t\t\t\t\tplaceholder=\"Select Track\"\n\t\t\t\t\t\t\t></b-form-select>\n\n\t\t\t\t\t\t\t<b-form-datepicker \n\t\t\t\t\t\t\t\tvalue-as-date id=\"chartDate\" \n\t\t\t\t\t\t\t\tv-model=\"chartDate\" \n\t\t\t\t\t\t\t\tclass=\"mx-2 raceDate\"\n\t\t\t\t\t\t\t\t:date-format-options=\"{ year: 'numeric', month: 'numeric', day: 'numeric' }\"\n\t\t\t\t\t\t\t></b-form-datepicker>\n\n\t\t\t\t\t\t\t<b-button variant=\"primary\" @click=\"getChart()\">Load Chart</b-button>\n\t\t\t\t\t\t</b-form>\t\t\t\t\t\t\n\t\t\t\t\t</b-col>\n\t\t\t\t\t<b-col class=\"text-right\">\n\t\t\t\t\t\t<b-button v-if=\"this.chart\" variant=\"primary\" @click=\"saveNotes()\">Save Notes</b-button>\n\t\t\t\t\t</b-col>\n\t\t\t\t</b-row>\n\t\t\t\t<b-tabs v-show=\"nav == 'Charts'\" class=\"mt-2\">\n\t\t\t\t\t<b-tab v-for=\"(race, racekey) in chart\" :key=\"racekey\">\n\t\t\t\t\t\t<template #title>\n\t\t\t\t\t\t\tRace {{race.raceNumber}}&nbsp;\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<chart-view :race=\"race\" :starterFields=\"starterFields[racekey]\"></chart-view>\n\t\t\t\t\t</b-tab>\n\t\t\t\t</b-tabs>\n\t\t\t</div>\t\t\t\n\t\t</b-container>\t\t\n\t</div>\n</template>\n\n<script>\n//import { } from 'bootstrap-vue'\nimport ChartView from '@/components/ChartView'\n\nimport axios from 'axios'\nimport _ from 'underscore'\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tChartView\n\t},\n\tdata () {\n\t\treturn {\n\t\t\tnav: \"Races\",\n\t\t\traces: [],\n\t\t\thorsesToWatch : [],\n\t\t\tfile: null,\n\t\t\tpp: \"\",\n\t\t\tchart: null,\n\t\t\tcharts: [],\n\t\t\tchartTrack: null,\n\t\t\tchartDate: null,\n\t\t\tloading: false,\n\t\t\thideML: true,\n\t\t\toptions: {\n\t\t\t\tsurface: 'all',\n\t\t\t\tdistance: 'all',\n\t\t\t\tcondition: 'all'\n\t\t\t},\n\t\t\ttrackConditions: [\n\t\t\t\t{value: \"ft\", text: \"Fast\"},\n\t\t\t\t{value: \"my\", text: \"Muddy\"},\n\t\t\t\t{value: \"wf\", text: \"Wet Fast\"},\n\t\t\t\t{value: \"yl\", text: \"Yielding\"},\n\t\t\t\t{value: \"hy\", text: \"Heavy\"},\n\t\t\t\t{value: \"gd\", text: \"Good\"},\n\t\t\t\t{value: \"sy\", text: \"Sloppy\"},\n\t\t\t\t{value: \"fm\", text: \"Firm\"},\n\t\t\t\t{value: \"sf\", text: \"Soft\"},\n\t\t\t\t{value: \"sl\", text: \"Slow\"}\n\t\t\t],\n\t\t\tsurfaceOptions: [\n\t\t\t\t{value: 'all', text: 'All Surfaces'},\n\t\t\t\t{value: 'same', text: 'Same Surface Only'},\n\t\t\t\t{value: 'off', text: 'Off The Turf'}\n\t\t\t],\n\t\t\tdistanceOptions: [\n\t\t\t\t{value: 'all', text: 'All Distances'},\n\t\t\t\t{value: 'same', text: 'Same Distance Only'},\n\t\t\t\t{value: 'similar', text: 'Similar Distances'}\n\t\t\t],\n\t\t\tconditionOptions: [\n\t\t\t\t{value: 'all', text: 'All Conditions'},\n\t\t\t\t{value: 'good', text: 'Good'},\n\t\t\t\t{value: 'off', text: 'Off'},\n\t\t\t\t{value: \"my\", text: \"Muddy\"},\n\t\t\t\t{value: \"wf\", text: \"Wet Fast\"},\n\t\t\t\t{value: \"yl\", text: \"Yielding\"},\n\t\t\t\t{value: \"hy\", text: \"Heavy\"},\n\t\t\t\t{value: \"gd\", text: \"Good\"},\n\t\t\t\t{value: \"sy\", text: \"Sloppy\"},\n\t\t\t\t{value: \"sf\", text: \"Soft\"},\n\t\t\t\t{value: \"sl\", text: \"Slow\"}\n\t\t\t],\n\t\t\tcombinations: [],\n\t\t\tcombinationsText: [],\n\t\t\ttmA: false,\n\t\t\ttmAB: true,\n\t\t\ttmB1: true,\n\t\t\ttmB2: false,\n\t\t\ttmC1: true,\n\t\t\ttest: null\n\t\t}\t\n\t},\n\tmounted() {\n\t\tthis.getHorsesToWatch();\n\t\tthis.getCharts();\n\t},\n\tcomputed: {\n\t\tchartTracks() {\n\t\t\treturn _.uniq(_.pluck(this.charts, \"track\"));\n\t\t},\n\t\thasResults() {\n\t\t\tvar has = [];\n\t\t\tfor (var i = 0; i < this.races.length; i++ ) {\n\t\t\t\thas[i] = false;\n\t\t\t\tfor (var j =0; j < this.races[i].unscratchedHorses.length; j++) {\n\t\t\t\t\tif (this.races[i].unscratchedHorses[j].finishPosition == 1) has[i] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn has;\n\t\t},\n\t\twPayout() {\n\t\t\tvar payout = [];\n\t\t\tfor (var i = 0; i < this.races.length; i++ ) {\n\t\t\t\tpayout[i] = 0;\n\t\t\t\tfor (var j =0; j < this.races[i].unscratchedHorses.length; j++) {\n\t\t\t\t\tif (this.races[i].unscratchedHorses[j].pick) payout[i] = this.races[i].unscratchedHorses[j].winPayout;\n\t\t\t\t}\n\t\t\t}\t\n\t\t\treturn payout;\t\t\n\t\t},\n\t\twpPayout() {\n\t\t\tvar payout = [];\n\t\t\tfor (var i = 0; i < this.races.length; i++ ) {\n\t\t\t\tpayout[i] = 0;\n\t\t\t\tfor (var j =0; j < this.races[i].unscratchedHorses.length; j++) {\n\t\t\t\t\tif (this.races[i].unscratchedHorses[j].pick) payout[i] = this.races[i].unscratchedHorses[j].winPayout\n\t\t\t\t\t\t+ this.races[i].unscratchedHorses[j].placePayout;\n\t\t\t\t}\n\t\t\t}\t\n\t\t\treturn payout;\t\t\n\t\t},\n\t\twpsPayout() {\n\t\t\tvar payout = [];\n\t\t\tfor (var i = 0; i < this.races.length; i++ ) {\n\t\t\t\tpayout[i] = 0;\n\t\t\t\tfor (var j =0; j < this.races[i].unscratchedHorses.length; j++) {\n\t\t\t\t\tif (this.races[i].unscratchedHorses[j].pick) payout[i] = this.races[i].unscratchedHorses[j].winPayout\n\t\t\t\t\t\t+ this.races[i].unscratchedHorses[j].placePayout\n\t\t\t\t\t\t+ this.races[i].unscratchedHorses[j].showPayout;\n\t\t\t\t}\n\t\t\t}\t\n\t\t\treturn payout;\t\t\n\t\t},\t\t\n\t\twPayoutSum() {\n\t\t\treturn _.reduce(this.wPayout, function(memo, num){ return memo + num; });\n\t\t},\n\t\twpPayoutSum() {\n\t\t\treturn _.reduce(this.wpPayout, function(memo, num){ return memo + num; });\n\t\t},\t\t\n\t\twpsPayoutSum() {\n\t\t\treturn _.reduce(this.wpsPayout, function(memo, num){ return memo + num; });\n\t\t},\n\t\tstarterFields() {\n\t\t\tvar starterFields = [];\n\n            \n\t\t\tfor (var i = 0; i < this.chart.length; i++) {\n\t\t\t\tvar fields=[];\n\t\t\t\tfields.push({key: \"lastRaced\", title: \"Last Racesd\", label: \"Last Raced\"}); \n\t\t\t\tfields.push({key: \"program\", title: \"Program\", label: \"Pgm\"});\n\t\t\t\tfields.push({key: \"horsename\", title: \"Horse Name and Jockey\", label: \"Horse Name (Jockey)\"});\n\t\t\t\tfields.push({key: \"medicationEquipment.text\", title: \"Medication and Equipment\", label: \"M/E\"});\n\t\t\t\tfields.push({key: \"postPosition\", title: \"Post Position\", label: \"PP\"});\n\t\t\t\tfor (var j = 0; j < this.chart[i].starters[0].pointsOfCall.length; j++) {\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tkey: \"pointsOfCall\" + j,\n\t\t\t\t\t\tlabel: this.chart[i].starters[0].pointsOfCall[j].text\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tfields.push({key: \"odds\", title: \"Odds\", label: \"Odds\"});\n\t\t\t\tfields.push({key: \"comments\", title: \"Comments\", label: \"Comments\"});\n\t\t\t\tfields.push({key: \"note\", title: \"Note\", label: \"Note\"});\n\t\t\t\tfields.push({key: \"horseFlag\", title: \"Horse Flag\", label: \"\"});\n\t\t\t\tfields.push({key: \"raceFlag\", title: \"Race Flags\", label: \"Flags\"});\n\t\t\t\tstarterFields.push(fields);\n\t\t\t}\n\t\t\treturn starterFields;\n\t\t\t\n\t\t}\n\t},\n\tmethods: {\n\t\tload() {\n\t\t\tif (this.races.length == 0) {\n\t\t\t\tthis.uploadAndCalculate();\n\t\t\t} else {\n\t\t\t\tthis.$bvModal.msgBoxConfirm(\"Reload and Start Over?\")\n\t\t\t\t\t.then(confirmed => {\n\t\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\t\tthis.uploadAndCalculate();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t},\t\t\n\t\tasync uploadAndCalculate() {\n            try {\n\t\t\t\tthis.loading = true;\n                var formData = new FormData();\n                formData.append(\"data\", this.file);\n                formData.append(\"filename\", this.file.name);\n\t\t\t\tformData.append(\"distanceOption\", this.options.distance);\n\t\t\t\tformData.append(\"surfaceOption\", this.options.surface);\n\t\t\t\tformData.append(\"conditionOption\", this.options.condition);\n                const response = await axios({\n                    url: 'uploadAndCalculate',\n                    method: 'POST',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/',\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    data: formData\n                });\n                //console.log(response);\n\t\t\t\tthis.races = response.data;\n\n\t\t\t\tfor (var i=0; i < this.races.length; i++) {\n\t\t\t\t\tthis.combinations[i] = [];\n\t\t\t\t\tthis.combinationsText[i] = []; \n\t\t\t\t\tfor (var j=0; j < this.races[i].multiRaceWagers.length; j++) {\n\t\t\t\t\t\tthis.combinations[i][j] = {a: [], b:[], c:[]};\n\t\t\t\t\t\tthis.combinationsText[i][j] = {tmA: \"\", tmAB: \"\", tmB1: \"\", tmB2: \"\", tmC1: \"\"};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err);\n                \n            }\n\t\t},\n\t\tasync parseCharts() {\n            try {\n\t\t\t\tthis.loading = true;\n                await axios({\n                    url: 'parseDirectory',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t});\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err);\n                \n            }\n\t\t},\t\n\t\tasync augment() {\n            try {\n\t\t\t\tthis.loading = true;\n                var formData = new FormData();\n                formData.append(\"data\", this.file);\n                formData.append(\"filename\", this.file.name);\n                const response = await axios({\n                    url: 'parsePP',\n                    method: 'POST',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/',\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    data: formData\n                });\n                //console.log(response.data);\n\t\t\t\tthis.races = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err);\n                \n            }\n\t\t},\n\t\tasync extractPP() {\n            try {\n\t\t\t\tthis.loading = true;\n                var formData = new FormData();\n                formData.append(\"data\", this.file);\n                formData.append(\"filename\", this.file.name);\n                const response = await axios({\n                    url: 'extractPP',\n                    method: 'POST',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/',\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    data: formData\n                });\n                //console.log(response.data);\n\t\t\t\tthis.pp = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err);\n                \n            }\n\t\t},\t\t\n\t\tasync getHorsesToWatch() {\n\t\t\ttry {\n\t\t\t\tconst response = await axios({\n\t\t\t\t\turl: 'getHorsesToWatch/',\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t});\n\t\t\t\tthis.horsesToWatch = response.data;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t},\t\n\t\tasync getCharts() {\n\t\t\ttry {\n\t\t\t\tconst response = await axios({\n\t\t\t\t\turl: 'getCharts/',\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t});\n\t\t\t\tthis.charts = response.data;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t},\n\t\tasync getChart() {\n\t\t\ttry {\n\t\t\t\tthis.loading = true;\n\t\t\t\tconst response = await axios({\n\t\t\t\t\turl: 'getChart/' + this.chartTrack + \"/\" + this.chartDate.getFullYear() + \"/\" + (this.chartDate.getMonth() + 1)+ \"/\" + this.chartDate.getDate(),\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t});\n\t\t\t\tthis.chart = response.data;\n\t\t\t\tthis.loading = false;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t},\t\t\t\t\t\t\n\t\tasync save() {\n            try {\n\t\t\t\tthis.loading = true;\n                await axios({\n                    url: 'save/' + this.file.name, \n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.$bvModal.msgBoxOk('Races saved.');\t\t\t\t\t\t\t\t\t\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\n\t\tretrieve() {\n\t\t\ttry {\n\t\t\t\tthis.$bvModal.msgBoxConfirm(\"Retrieve Saved Races?\")\n\t\t\t\t\t.then(async confirmed => {\n\t\t\t\t\t\tif (confirmed) {\n\t\t\t\t\t\t\t\tthis.loading = true;\n\t\t\t\t\t\t\t\tconst response = await axios({\n\t\t\t\t\t\t\t\t\turl: 'retrieve/' + this.file.name,\n\t\t\t\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.races = response.data;\n\t\t\t\t\t\t\t\tthis.loading = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t},\n\t\tasync getChanges() {\n            try {\n\t\t\t\tthis.loading = true;\n                const response = await axios({\n                    url: 'getChanges/',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\t\n\t\tasync getResults() {\n            try {\n\t\t\t\tthis.loading = true;\n                const response = await axios({\n                    url: 'getResults/',\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\t\t\t\n\t\tasync calculate() {\n            try {\n\t\t\t\tthis.loading = true;\n                const response = await axios({\n                    url: 'calculate/' + this.options.distance + '/' + this.options.surface + '/' + this.options.condition,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                this.races = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\n\t\tasync updateCondition(race) {\n            try {\n\t\t\t\tthis.loading = true;\n                const response = await axios({\n                    url: 'setTrackCondition/' + race.raceNumber + '/' + race.trackCondition,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n\t\t\t\tthis.races = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\t\t\n\t\t},\n\t\tasync toggleOffTheTurf(race) {\n            try {\n\t\t\t\tthis.loading = true;\n                const response = await axios({\n                    url: 'toggleOffTheTurf/' + race.raceNumber,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n\t\t\t\tthis.races = response.data;\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err.response);\n                \n            }\t\t\n\t\t},\n\t\ttoggleAll(race, b) {\n\t\t\t_.each(race.horses, async function(horse){\t\t\n\t\t\t\ttry {\n\t\t\t\t\thorse._showDetails = b;\n\t\t\t\t\tawait axios({\n\t\t\t\t\t\turl: 'toggleShowDetail/' + race.raceNumber + '/' + horse.programNumber,\n\t\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t\t});\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\n\t\t\t\t}           \n\t\t\t});\n\t\t},\n\t\tasync setRaceNote(race) {\n            try {\n\t\t\t\tthis.loading = true;\n                var formData = new FormData();\n                formData.append(\"raceNumber\", race.raceNumber);\n                formData.append(\"note\", race.note);\n                await axios({\n                    url: 'setRaceNote',\n                    method: 'POST',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/',\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    data: formData\n                });\n                //console.log(response);\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err);\n                \n            }\n\t\t},\n\t\tasync saveNotes() {\n            try {\n\t\t\t\tthis.loading = true;\n\t\t\t\tvar races = [];\n\t\t\t\tfor (var i = 0; i < this.chart.length; i++) {\n\t\t\t\t\tvar notes = [];\n\t\t\t\t\tfor (var j = 0; j < this.chart[i].starters.length; j++) {\n\t\t\t\t\t\tif (this.chart[i].starters[j].paceScenarioComment\n\t\t\t\t\t\t\t|| this.chart[i].starters[j].raceFlag != null \n\t\t\t\t\t\t\t|| this.chart[i].starters[j].horseFlag)\n\t\t\t\t\t\t\tnotes.push({\n\t\t\t\t\t\t\t\tprogram: this.chart[i].starters[j].program,\n\t\t\t\t\t\t\t\tname: this.chart[i].starters[j].horse.name,\n\t\t\t\t\t\t\t\tposition: this.chart[i].starters[j].finishPosition,\n\t\t\t\t\t\t\t\tbeatenLengths: (this.chart[i].starters[j].finishPosition == 1) ? 0 : this.chart[i].starters[j].pointsOfCall[this.chart[i].starters[j].pointsOfCall.length-1].relativePosition.totalLengthsBehind.lengths,\n\t\t\t\t\t\t\t\tnote: this.chart[i].starters[j].raceNote,\n\t\t\t\t\t\t\t\traceFlag: this.chart[i].starters[j].raceFlag,\n\t\t\t\t\t\t\t\thorseFlag: this.chart[i].starters[j].horseFlag\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (notes.length > 0)\n\t\t\t\t\t\traces.push({\n\t\t\t\t\t\t\ttrack: this.chart[i].track.code,\n\t\t\t\t\t\t\traceDate: this.chart[i].raceDate,\n\t\t\t\t\t\t\traceNumber: this.chart[i].raceNumber,\n\t\t\t\t\t\t\tstarters: notes\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconsole.log(races);\n\n                var formData = new FormData();\n                formData.append(\"notes\", JSON.stringify(races));\n                await axios({\n                    url: 'saveNotes',\n                    method: 'POST',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/',\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    data: formData\n                });\n                //console.log(response);\n\t\t\t\tthis.loading = false;\n            } catch (err) {\n                console.log(err);\n                \n            }\n\t\t},\t\t\t\t\t\t\n\t\tformatCurrency(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: 'USD',\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\n\t\tformatCurrency2(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: 'USD',\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\t//minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\t//maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\n\t\tformatDate (date) {\n\t\t\treturn date[1] + \"/\" + date[2] + \"/\" + date[0];\n\t\t},\t\n\t\ttmGenerate (results) {\n\t\t\tfor (var i=0; i < this.races.length; i++) {\n\t\t\t\tfor (var j=0; j < this.races[i].multiRaceWagers.length; j++) {\n\t\t\t\t\tthis.races[i].multiRaceWagers[j] = results[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.races.splice();\n\t\t},\n\t\tcomboCheck (arr, n) {\n\t\t\tconsole.log(arr);\n\t\t\tconsole.log(n);\n\t\t\tarr[n] = !arr[n];\n\t\t},\n\t\tasync togglePick (horse) {\n\t\t\ttry {\n\t\t\t\tconsole.log(horse);\n                await axios({\n                    url: 'togglePick/' + horse.raceNumber + '/' + horse.programNumber,\n                    method: 'GET',\n                    baseURL: 'http://localhost:8080/jpp/rest/remote/'\n                });\n                horse.pick = false;\n\n            } catch (err) {\n                console.log(err.response);\n                \n            }\n\t\t},\n\t\tpaceScenarioComment(scenario) {\n\t\t\tswitch (scenario) {\n\t\t\t\tcase \"FAST_EARLY_PACE\" :\n\t\t\t\t\treturn 'These races will be run very fast to the second call because there are multiple “E” horses all trying to get the lead. Very often these “E” horses burn each other out setting the race up for a winner from off the pace. The first thing to do is to determine if one of the “E” horses is a good horse and has a strong BRIS or Hall Early Pace figure advantage over the other “E” horse(s). If there is such a powerful “E” horse, then you can forget the other “E” horses as they will probably finish out-of-the-money. If the dominant “E” horse is one of the top horses of all the horses in the race, it may well go gate-to-wire. However, such a dominant “E” horse has been severely compromised by all the pressure from the other “E” horse(s) in the race and could easily be passed by a horse coming from off the pace. If the dominant “E” horse is passed early in the stretch, it will most likely finish out of the money.'\n\t\t\t\t\t+ 'If there is no dominant “E” horse in the race, the chances are high that all the “E” horses will finish off the board. These races are generally won by good “EP” and “P” horses and sometimes by a good “S” horse. The key is to look for a good horse with the best Final Fraction pace rating.';\n\t\t\t\tcase \"LONE_EARLY_PACE\" :\n\t\t\t\t\treturn 'There may be no more dangerous horse than a good “E” or “EP” horse that figures to be loose on the lead. These horses are left alone to optimize the pace of the race for themselves. A good “E” or “EP” horse loose on the lead will, more often than not, win the race. Even apparently poor “E” and “EP” horses can “wake up” in this situation and unexpectedly wire the field at big mutuel payoffs. These apparently poor horses are a particularly good play if they have an ALL-Ways software workout rating of 1 or 2. As a “golden rule”, never ignore an “E” or “EP” horse in Lone Early Pace races. Look for the best good “P” and “S” horses to finish in-the-money. Pay particular attention to those with the best Final Fraction Pace figures.';\n\t\t\t\tcase \"HONEST_PACE\" :\n\t\t\t\t\treturn 'Most races fall into this category. While a “P” or “S” horse can certainly win such a race, they generally need a faster pace to set the race up for their late stretch run. These races tend to favor “E” and “EP” horses. In an E-EP shaped race, if a good “EP” horse has a Speed or Combined Pace rating better than the “E” horse, it will generally pass the “E” horse in the stretch run. If the “EP” horse also has an Early Pace rating that is superior to the “E” horse, it will generally pass the “E” horse early in the stretch run causing the “E” horse to finish off-the-board. EP-EP shape races lend themselves nicely to traditional form, class and speed handicapping. Note that a prevailing track pace bias tends to have the most influence on EP-EP races.';\n\t\t\t\tcase 'SLOW_PACE' :\n\t\t\t\t\treturn 'These races, as expected, tend to be run very slow to the second call because no horse in the field wants to be anywhere close to the lead. These races are generally won by good “P” or “S” horses with superior Combined Pace and/or Speed ratings. However, there is a solid spot play to look for that can yield large mutuel payoffs. While none of the horses wants the lead, one of them is going to get it and, more often than not, it is the “P” horse with the fastest Early Pace figure. Frequently, such a “P” horse is able to move into the lead by three to five lengths or more and hold on for a gate-to-wire win. An astute trainer will spot this opportunity and instruct the jockey to go right for the lead. You have probably heard the term “stole the race”. This often is what happens with a “P” horse in a Slow Pace race or a lone “EP” or “E” horse in a Lone Early Pace race as described earlier.';\n\t\t\t}\n\t\t},\n\t\tstr_pad_left(string,pad,length) {\n\t\t\treturn (new Array(length+1).join(pad)+string).slice(-length);\n\t\t}\t\t\n\t}\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n}\n\n#nav {\n  padding: 30px;\n}\n\n.navbar-light .navbar-nav .nav-link {\n\tfont-weight: bold;\n}\n\ntable#pps .flip-list-move {\n  transition: transform 1s;\n}\n\n#filenameform {\n\twidth: 400px;\n}\n.fv {\n\twidth: 150px !important;\n}\n\n.pp {\n\tfont-size: xx-small;\n}\n\n.horse {\n\tfont-size: small; \n}\n\n.sup { \n\tfont-size: .50em;\n\tvertical-align: super;\n\tpadding-left: 0px !important;\n}\n\n\n.brand {\n\tfont-size: x-large; \n}\n\n.raceDate {\n\twidth: 198px !important;\n}\n\n.diff365 {\n\tborder-top: solid orange;\n}\n\n.diff90 {\n\tborder-top: solid purple;\n}\n\n.workout {\n\twhite-space: pre;\n}\n\n.alsoInRace, .strong {\n\tfont-weight: bold;\n}\n\n.scratched, .ignored {\n\ttext-decoration: line-through;\n}\n\n.scratchedDetail {\n\tbackground: gray;\n}\n\n.aHorse {\n\tborder-left: solid thick greenyellow;\n\tborder-right: solid thick greenyellow;\n}\n\n.bHorse {\n\tborder-left: solid thick cornflowerblue;\n\tborder-right: solid thick cornflowerblue;\n}\n\n.cHorse {\n\tborder-left: solid thick gold;\n\tborder-right: solid thick gold;\n}\n\n.xHorse {\n\tborder-left: solid thick darkslategray;\n\tborder-right: solid thick darkslategray;\n}\n\n.greenHighlight {\n\tbackground-color: greenyellow;\n}\n\n.lightGreenHighlight {\n\tbackground-color: rgb(223, 249, 184);\n}\n\n.lightGreenHighlightBorder {\n\tborder-bottom: solid greenyellow;\n}\n\n.blueHighlightBorder {\n\tborder-bottom: solid lightblue;\n}\n\n.blueHighlight {\n\tbackground-color: lightblue;\n}\n\n.gt180, redHighlight {\n\tbackground-color: red;\n}\n\n.gt90, lightRedHighlight {\n\tbackground-color: rgb(231, 194, 194)\n}\n\n.gt45, .yellowHighlight  {\n\tbackground-color: yellow;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}