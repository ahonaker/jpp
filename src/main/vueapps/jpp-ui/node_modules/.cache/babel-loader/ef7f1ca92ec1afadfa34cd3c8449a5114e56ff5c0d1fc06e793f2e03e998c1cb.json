{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { BIconStar, BIconStarFill, BIconTrash } from 'bootstrap-vue';\nimport axios from 'axios';\nimport _ from 'underscore';\nexport default {\n  name: 'HorsesToWatchView',\n  components: {\n    BIconStar,\n    BIconStarFill,\n    BIconTrash\n  },\n  props: [],\n  data() {\n    return {\n      horsesToWatch: [],\n      filter: '',\n      horseFields: [{\n        key: \"raceDate\",\n        label: \"Race\"\n      }, {\n        key: \"position\",\n        label: \"Fin\"\n      }, {\n        key: \"comment\"\n      }, {\n        key: \"flag\"\n      }, {\n        key: 'deleteButton',\n        label: \"\"\n      }]\n    };\n  },\n  mounted() {\n    this.getHorsesToWatch();\n  },\n  computed: {\n    filtered() {\n      return _.filter(this.horsesToWatch, function (h) {\n        return h.name.indexOf(this.filter) > -1 || this.filter == '';\n      });\n    }\n  },\n  methods: {\n    async getHorsesToWatch() {\n      try {\n        const response = await axios({\n          url: 'getHorsesToWatch/',\n          method: 'GET',\n          baseURL: 'http://localhost:8080/jpp/rest/remote/'\n        });\n        this.horsesToWatch = response.data;\n      } catch (err) {\n        console.log(err.response);\n      }\n    },\n    formatDate(date) {\n      return date[1] + \"/\" + date[2] + \"/\" + date[0];\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;IAAAC;IAAAC;EACA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC,cACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;MAAA,GACA;QAAAA;MAAA,GACA;QAAAA;QAAAC;MAAA;IAEA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MAEA;QACA;MACA;IACA;EACA;EACAC;IACA;MACA;QACA;UACAC;UACAC;UACAC;QACA;QACA;MACA;QACAC;MAEA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","components","BIconStar","BIconStarFill","BIconTrash","props","data","horsesToWatch","filter","horseFields","key","label","mounted","computed","filtered","methods","url","method","baseURL","console","formatDate"],"sourceRoot":"src/components","sources":["HorsesToWatchView.vue"],"sourcesContent":["<template>\n    <div>\n        <b-row>\n            <b-col>\n                <b-form inline>\n                    <label class=\"sr-only\" for=\"name\">Name</label>\n                    <b-form-input\n                        id=\"name\"\n                        class=\"mb-2 mr-sm-2 mb-sm-0\"\n                        placeholder=\"Filter Horse Name\"\n                        v-model=\"filter\"\n                    ></b-form-input>\n                </b-form>\n            </b-col>\n            <b-col>\n                <b-button variant=\"primary\" @click=\"getHorsesToWatch()\" class=\"mx-2\">Refresh</b-button>\n                <b-button variant=\"primary\" @click=\"save()\">Save</b-button>\n            </b-col>\n        </b-row>\n        <b-row class=\"mt-2\">\n            <b-card\n                v-for=\"horse in horsesToWatch\" :key=\"horse.name\"\n                tag=\"article\"\n                style=\"min-width: 300px;\"\n                class=\"m-2\"\n            >\n                <template #header>\n                    <h6 class=\"mb-0\">\n                        <b-icon-star-fill variant=\"success\" v-if=\"horse.flag =='Star'\" @click=\"horse.flag = ''\"></b-icon-star-fill>\n                        <b-icon-star v-else @click=\"horse.flag = 'Star'\"></b-icon-star>\n                        {{horse.name}}\n                        <span class=\"text-right\"><b-icon-trash variant=\"outline-danger\" @click=\"removeRaceNote(row.item)\"></b-icon-trash></span>\n                    </h6>\n                </template>\n\n                <b-form-textarea\n                    v-model=\"horse.comment\"\n                    placeholder=\"Enter something...\"\n                    max-rows=\"4\"\n                ></b-form-textarea>\n\n                <b-table \n                    :items=\"horse.raceNotes\"\n                    :fields=\"horseFields\"\n                    small\n                    class=\"mx-2\"\n                >\n                    <template #cell(raceDate)=\"row\">\n                        {{formatDate(row.item.raceDate)}}<sup>{{row.item.raceNumber}}</sup> {{row.item.track}}\n                    </template>\n                    <template #cell(position)=\"row\">\n                        {{row.item.position}}<sup v-if=\"row.item.beatenLengths >0\">{{row.item.beatenLengths}}</sup>\n                    </template>\n                    <template #cell(deleteButton)=\"row\">\n                        <b-icon-trash variant=\"outline-danger\" @click=\"removeRaceNote(row.item)\"></b-icon-trash>\n                    </template>                    \n                </b-table>\n\n            </b-card>            \n        </b-row>\n    </div>\n</template>\n\n<script>\nimport { BIconStar, BIconStarFill, BIconTrash } from 'bootstrap-vue'\nimport axios from 'axios'\nimport _ from 'underscore'\n\nexport default {\n    name: 'HorsesToWatchView',\n    components: {\n\t\tBIconStar, BIconStarFill, BIconTrash\n    },\n    props : [],\n    data () {\n\t\treturn {\n            horsesToWatch: [],\n\t\t\tfilter: '',\n            horseFields: [\n                {key: \"raceDate\", label: \"Race\"},\n                {key: \"position\" , label: \"Fin\"},\n                {key: \"comment\"},\n                {key: \"flag\"},\n                {key: 'deleteButton', label: \"\"}\n            ]\n        }\n    },\n    mounted() {\n\t\tthis.getHorsesToWatch();\n    },\n    computed: {\n        filtered () {\n            \n            return _.filter(this.horsesToWatch, function(h){\n                return h.name.indexOf(this.filter) > -1 || this.filter == '';\n            })\n        }\n    },\n    methods: {\n\t\tasync getHorsesToWatch() {\n\t\t\ttry {\n\t\t\t\tconst response = await axios({\n\t\t\t\t\turl: 'getHorsesToWatch/',\n\t\t\t\t\tmethod: 'GET',\n\t\t\t\t\tbaseURL: 'http://localhost:8080/jpp/rest/remote/'\n\t\t\t\t});\n\t\t\t\tthis.horsesToWatch = response.data;\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.response);\n\t\t\t\t\t\t\t\n\t\t\t}\t\n\t\t},\n\t\tformatDate (date) {\n\t\t\treturn date[1] + \"/\" + date[2] + \"/\" + date[0];\n\t\t},\n    }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}