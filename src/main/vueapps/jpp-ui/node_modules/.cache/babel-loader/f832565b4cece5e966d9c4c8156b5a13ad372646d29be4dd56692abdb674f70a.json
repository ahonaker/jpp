{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { BIconStar, BIconStarFill, BIconCameraVideoFill, BIconKey, BIconBarChartSteps } from 'bootstrap-vue';\nimport _ from 'underscore';\nexport default {\n  name: 'ChartView',\n  components: {\n    BIconStar,\n    BIconStarFill,\n    BIconCameraVideoFill,\n    BIconKey,\n    BIconBarChartSteps\n  },\n  props: ['race', 'starterFields', 'charts'],\n  data() {\n    return {\n      flags: ['', 'Wide', 'Trouble', 'Bad Start', 'Good Trip', 'Duel', 'Early Speed', 'Late Kick', 'No Factor']\n    };\n  },\n  computed: {\n    claimed() {\n      return _.filter(this.race.starters, function (s) {\n        return s.claim && s.claim.claimed;\n      });\n    },\n    inForClaim() {\n      var c = 0;\n      for (var i = 0; i < this.race.starters.length; i++) {\n        if (this.race.starters[i].claim) {\n          c++;\n        }\n      }\n      return c;\n    }\n  },\n  methods: {\n    formatDate(date) {\n      return date[1] + \"/\" + date[2] + \"/\" + date[0];\n    },\n    formatCurrency(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 0,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 0 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    str_pad_left(string, pad, length) {\n      return (new Array(length + 1).join(pad) + string).slice(-length);\n    },\n    format2Places(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 2,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 2 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    format2PlacesCurrency(amount) {\n      const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        // These options are needed to round to whole numbers if that's what you want.\n        minimumFractionDigits: 2,\n        // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        maximumFractionDigits: 2 // (causes 2500.99 to be printed as $2,501)\n      });\n\n      return formatter.format(amount);\n    },\n    keyRaceHorsesFormat(horses) {\n      var ret = \"<span class='pp'>\";\n      for (var i = 0; i < horses.length; i++) {\n        ret += horses[i].name + \" @ \" + horses[i].track + \" \" + this.formatDate(horses[i].raceDate) + \" Pos: \" + horses[i].position + \" BL: \" + this.format2Places(horses[i].beatenLengths);\n        if (i < horses.length - 1) ret += \"<br>\";\n      }\n      return ret + \"</span>\";\n    },\n    goToChart(starter) {\n      this.$emit(\"goToChart\", {\n        trackCode: starter.lastRaced.track.code,\n        raceDate: starter.lastRaced.raceDate,\n        raceNumber: starter.lastRaced.raceNumber\n      });\n    },\n    hasChart(lastRaced) {\n      if (lastRaced == null) return false;\n      const chartDates = _.pluck(_.where(this.charts, {\n        track: lastRaced.track.code\n      }), 'date');\n      const day = \"\" + this.str_pad_left(lastRaced.raceDate[1], 0, 2) + this.str_pad_left(lastRaced.raceDate[2], 0, 2) + lastRaced.raceDate[0];\n      return chartDates.indexOf(day) > -1;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AAEA;EACAA;EACAC;IACAC;IAAAC;IAAAC;IAAAC;IAAAC;EACA;EACAC;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;UACAC;QACA;MACA;MACA;IACA;EAEA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACAC;QACAC;QAEA;QACAC;QAAA;QACAC;MACA;;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QAGA;QACAH;QAAA;QACAC;MACA;;MACA;IACA;IACAG;MACA;QACAN;QACAC;QAEA;QACAC;QAAA;QACAC;MACA;;MACA;IACA;IACAI;MACA;MACA;QACAC,wBACA,0BACA,4CACA,gCACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;MACA;IACA;IACAC;MACA;MACA;QAAAC;MAAA;MACA,iBACA,iDACA,iDACAC;MACA;IACA;EACA;AACA","names":["name","components","BIconStar","BIconStarFill","BIconCameraVideoFill","BIconKey","BIconBarChartSteps","props","data","flags","computed","claimed","inForClaim","c","methods","formatDate","formatCurrency","style","currency","minimumFractionDigits","maximumFractionDigits","str_pad_left","format2Places","format2PlacesCurrency","keyRaceHorsesFormat","ret","goToChart","trackCode","raceDate","raceNumber","hasChart","track","lastRaced"],"sourceRoot":"src/components","sources":["ChartView.vue"],"sourcesContent":["/* eslint-disable vue/valid-v-slot */\n<template>\n    <div class=\"card-body mt-2\">\n\t\t<a \n\t\t\t\t:href=\"'https://www.twinspires.com/bet/video/replay/'\n\t\t\t\t\t+ race.raceDate[0] + '-' + str_pad_left(race.raceDate[1],0,2) + '-' + str_pad_left(race.raceDate[2],0,2) \n\t\t\t\t\t+ '/' + race.track.code\n\t\t\t\t\t+ '/Thoroughbred/' + race.raceNumber\" \n\t\t\t\ttarget=\"_blank\"  \n\t\t\t><b-icon-camera-video-fill></b-icon-camera-video-fill>\n\t\t</a>&nbsp;\n        <strong>{{race.track.name}} {{formatDate(race.raceDate)}} Race {{race.raceNumber}} <b-icon-key v-if=\"race.keyRace != null\" variant=\"success\" font-scale=\"1.5\" rotate=\"90\"></b-icon-key></strong><br>\n        {{race.conditions.type}}<br>\n        {{race.conditions.text}}<br>\n        {{race.distance.text}} on the {{race.surface}}<br>\n        <strong>Purse:</strong> {{race.purse.text}}<br>\n        <span v-for=\"(enhancement, eindex) in race.purse.enhancements\" :key=\"eindex\"><strong>{{enhancement.type}}:</strong> {{enhancement.text}}</span><br>\n        <strong>Available Money:</strong> {{race.purse.availableMoney}}<br>\n        <strong>Weather:</strong> {{race.weather.text}} <strong>Track:</strong> {{race.trackCondition}}<br>\n        <strong>Off at:</strong> {{race.postTime}} <strong>Start:</strong> {{race.startComments}} <strong>Timer:</strong> {{race.timer}}\n        <b-table\n            id=\"runningLines\"\n            :items=\"race.starters\"\n            :fields=\"starterFields\"\n            small\n            primary-key=\"program\"\n            class=\"mt-2 horse\"\n        >\n            <template #cell(lastRaced)=\"row\">\n                <b-icon-bar-chart-steps v-if=\"hasChart(row.item.lastRaced)\" @click=\"goToChart(row.item)\"></b-icon-bar-chart-steps>\n                <span v-if=\"row.item.lastRaced && row.item.lastRacedKeyRace != null\" v-b-popover.hover.html.right=\"keyRaceHorsesFormat(row.item.lastRacedKeyRace.horses)\" :title=\"row.item.lastRacedKeyRace.track + ' ' + formatDate(row.item.lastRacedKeyRace.raceDate) + ' Race ' + row.item.lastRacedKeyRace.raceNumber\">\n                    {{formatDate(row.item.lastRaced.raceDate)}}<sup>{{row.item.lastRaced.raceNumber}}</sup> {{row.item.lastRaced.track.code}}<sup>{{row.item.lastRaced.officialPosition}}</sup>\n                    <b-icon-key v-if=\"row.item.lastRacedKeyRace != null\" variant=\"success\" font-scale=\"1.5\" rotate=\"90\"></b-icon-key>\n                </span>\n                <span v-if=\"row.item.lastRaced && row.item.lastRacedKeyRace == null\">\n                    {{formatDate(row.item.lastRaced.raceDate)}}<sup>{{row.item.lastRaced.raceNumber}}</sup> {{row.item.lastRaced.track.code}}<sup>{{row.item.lastRaced.officialPosition}}</sup>\n                </span>\n            </template>\n            <template #cell(horsename)=\"row\">\n                {{row.item.horse.name}} ({{row.item.jockey.name}})\n            </template> \n            <template #cell(pointsOfCall0)=\"row\">\n                {{row.item.pointsOfCall[0].relativePosition.position}}\n                <sup v-if=\"row.item.pointsOfCall[0].relativePosition.lengthsAhead\" v-b-tooltip.hover :title=\"(row.item.pointsOfCall[0].relativePosition.totalLengthsBehind != null) ? row.item.pointsOfCall[0].relativePosition.totalLengthsBehind.text + ' Total LB' : ''\">{{row.item.pointsOfCall[0].relativePosition.lengthsAhead.text}}</sup>\n                <sup v-else><em>{{row.item.pointsOfCall[0].relativePosition.totalLengthsBehind.text}}</em></sup>\n            </template> \n            <template #cell(pointsOfCall1)=\"row\">\n                {{row.item.pointsOfCall[1].relativePosition.position}}\n                <sup v-if=\"row.item.pointsOfCall[1].relativePosition.lengthsAhead\" v-b-tooltip.hover :title=\"(row.item.pointsOfCall[1].relativePosition.totalLengthsBehind != null) ? row.item.pointsOfCall[1].relativePosition.totalLengthsBehind.text + ' Total LB' : ''\">{{row.item.pointsOfCall[1].relativePosition.lengthsAhead.text}}</sup>\n                <sup v-else><em>{{row.item.pointsOfCall[1].relativePosition.totalLengthsBehind.text}}</em></sup>\n            </template> \n            <template #cell(pointsOfCall2)=\"row\">\n                {{row.item.pointsOfCall[2].relativePosition.position}}\n                <sup v-if=\"row.item.pointsOfCall[2].relativePosition.lengthsAhead\" v-b-tooltip.hover :title=\"(row.item.pointsOfCall[2].relativePosition.totalLengthsBehind != null) ? row.item.pointsOfCall[2].relativePosition.totalLengthsBehind.text + ' Total LB' : ''\">{{row.item.pointsOfCall[2].relativePosition.lengthsAhead.text}}</sup>\n                <sup v-else><em>{{row.item.pointsOfCall[2].relativePosition.totalLengthsBehind.text}}</em></sup>\n            </template> \n            <template #cell(pointsOfCall3)=\"row\">\n                {{row.item.pointsOfCall[3].relativePosition.position}}\n                <sup v-if=\"row.item.pointsOfCall[3].relativePosition.lengthsAhead\" v-b-tooltip.hover :title=\"(row.item.pointsOfCall[3].relativePosition.totalLengthsBehind != null) ? row.item.pointsOfCall[3].relativePosition.totalLengthsBehind.text + ' Total LB' : ''\">{{row.item.pointsOfCall[3].relativePosition.lengthsAhead.text}}</sup>\n                <sup v-else><em>{{row.item.pointsOfCall[3].relativePosition.totalLengthsBehind.text}}</em></sup>\n            </template> \n            <template #cell(pointsOfCall4)=\"row\">\n                {{row.item.pointsOfCall[4].relativePosition.position}}\n                <sup v-if=\"row.item.pointsOfCall[4].relativePosition.lengthsAhead\" v-b-tooltip.hover :title=\"(row.item.pointsOfCall[4].relativePosition.totalLengthsBehind != null) ? row.item.pointsOfCall[4].relativePosition.totalLengthsBehind.text + ' Total LB' : ''\">{{row.item.pointsOfCall[4].relativePosition.lengthsAhead.text}}</sup>\n                <sup v-else><em>{{row.item.pointsOfCall[4].relativePosition.totalLengthsBehind.text}}</em></sup>\n            </template> \n            <template #cell(pointsOfCall5)=\"row\">\n                {{row.item.pointsOfCall[5].relativePosition.position}}\n                <sup v-if=\"row.item.pointsOfCall[5].relativePosition.lengthsAhead\" v-b-tooltip.hover :title=\"(row.item.pointsOfCall[5].relativePosition.totalLengthsBehind != null) ? row.item.pointsOfCall[5].relativePosition.totalLengthsBehind.text + ' Total LB' : ''\">{{row.item.pointsOfCall[5].relativePosition.lengthsAhead.text}}</sup>\n                <sup v-else><em>{{row.item.pointsOfCall[5].relativePosition.totalLengthsBehind.text}}</em></sup>\n            </template>    \n\t\t\t<template #cell(odds)=\"row\">\n                {{row.value}}<span v-if=\"row.item.favorite\">*</span>\n            </template> \t\t\t \n            <template #cell(note)=\"row\">\n                <b-form-input v-model=\"row.item.note\" placeholder=\"Enter Note\"></b-form-input>\n            </template>  \n            <template #cell(horseFlag)=\"row\">\n\t\t\t\t<b-icon-star-fill v-if=\"row.item.horseFlag == 'Star'\" variant=\"success\" @click=\"row.item.horseFlag = ''\"></b-icon-star-fill><b-icon-star v-else @click=\"row.item.horseFlag = 'Star'\"></b-icon-star>\n            </template>  \n            <template #cell(raceFlag)=\"row\">\n\t\t\t\t<b-form-select v-model=\"row.item.raceFlag\" :options=\"flags\"></b-form-select>\n            </template>  \t\t\t\t\t                                            \n\t\t</b-table>     \n\t\t<strong>Fractional Times: </strong>&nbsp;&nbsp;<span v-for=\"(fractional, findex) in race.fractionals\" :key=\"'f' + findex\">{{fractional.time}}&nbsp;&nbsp;&nbsp;</span><br>\n\t\t<strong>Split Times: </strong>&nbsp;&nbsp;<span v-for=\"(split, sindex) in race.splits\" :key=\"'s' + sindex\">({{split.time}})&nbsp;&nbsp;&nbsp;</span><br><br>\n\t\t<strong>Winner: </strong>{{race.starters[0].horse.program}} - {{race.starters[0].horse.name}}, {{race.starters[0].horse.color}} {{race.starters[0].horse.sex}}, by {{race.starters[0].horse.sire.name}} out of {{race.starters[0].horse.dam.name}} by {{race.starters[0].horse.damSire.name}}. Foaled {{formatDate(race.starters[0].horse.foalingDate)}} in {{race.starters[0].horse.foalingLocation}}<br>\n\t\t<strong>Winning Owner: </strong>{{race.starters[0].owner.name}}<br>\n        <span v-if=\"race.keyRace != null\">\n            <strong>Key Race Next Out Performances: </strong>\n            <span v-for=\"(horse, khindex) in race.keyRace.horses\" :key=\"khindex\">\n                <b-row>\n                    <b-col offset=\"2\" cols=\"2\">\n                        <strong>{{horse.name}}</strong>\n                    </b-col>\n                    <b-col cols=\"4\">\n                        @ {{horse.track}} Race {{horse.raceNumber}} on {{formatDate(horse.raceDate)}}\n                    </b-col>  \n                    <b-col>\n                        Finish: {{horse.position}} <span v-if=\"horse.position > 1\">(BL: {{horse.beatenLengths}})</span>\n                    </b-col>   \n                </b-row>\n            </span>\n            <br>\n        </span>  \n\t\t<span v-for=\"(starter, stcindex) in claimed\" :key=\"'stc' + starter.program\">\n\t\t\t<b-row>\n\t\t\t\t<b-col>\n\t\t\t\t\t<span v-if=\"stcindex == 0\"><strong>{{claimed.length}} Claimed Horse(s): </strong></span>\n\t\t\t\t</b-col>\n\t\t\t\t<b-col> \n\t\t\t\t\t<strong>{{starter.horse.name}}</strong>\n\t\t\t\t</b-col>\n\t\t\t\t<b-col>\n\t\t\t\t\t{{starter.claim.newTrainerName}}\n\t\t\t\t</b-col>\n\t\t\t\t<b-col cols=\"6\">\n\t\t\t\t\t{{starter.claim.newOwnerName}}\n\t\t\t\t</b-col>                      \n\t\t\t</b-row>\n\t\t</span>\n\t\t<span v-if=\"inForClaim > 0\">\n\t\t\t<strong>Claiming Prices: </strong>\t\n\t\t\t<span v-for=\"starter in race.starters\" :key=\"'c' + starter.program\">\n\t\t\t\t<span v-if=\"starter.claim\">{{starter.program}}  - {{starter.horse.name}}: {{formatCurrency(starter.claim.price)}};&nbsp;</span>\n\t\t\t</span> \n\t\t\t<br>\n\t\t</span>\n\t\t<span v-if=\"race.scratches.length > 0\"><strong>Scratched Horses: </strong><span v-for=\"(scratch, scrindex) in race.scratches\" :key=\"scratch.horse.name\">{{scratch.horse.name}} ({{scratch.reason}})<span v-if=\"scrindex < race.scratches.length - 1\"></span>;&nbsp;</span></span><br>\n        <strong>Total WPS Pool: </strong>{{formatCurrency(race.wagering.winPlaceShow.totalWPSPool)}}\n        <b-row>\n            <b-col cols=\"5\">\n                <b-row>\n                    <b-col cols=\"1\"><strong>Pgm</strong></b-col>\n                    <b-col cols=\"4\"><strong>Horse</strong></b-col>\n                    <b-col><strong>Win</strong></b-col>\n                    <b-col><strong>Place</strong></b-col>\n                    <b-col><strong>Show</strong></b-col>\n                </b-row>\n                <b-row v-for=\"payoff in race.wagering.winPlaceShow.payoffs\" :key=\"'py' + payoff.program\">\n                    <b-col cols=\"1\">{{payoff.program}}</b-col>\n                    <b-col cols=\"4\">{{payoff.horse.name}}</b-col>\n                    <b-col><span v-if=\"payoff.win\">{{format2PlacesCurrency(payoff.win.payoff)}}</span></b-col>\n                    <b-col><span v-if=\"payoff.place\">{{format2PlacesCurrency(payoff.place.payoff)}}</span></b-col>\n                    <b-col><span v-if=\"payoff.show\">{{format2PlacesCurrency(payoff.show.payoff)}}</span></b-col>\n                </b-row>\n            </b-col>\n            <b-col>\n                <b-row>\n                    <b-col cols=\"4\"><strong>Wager Type</strong></b-col>\n                    <b-col cols=\"4\"><strong>Winning Numbers</strong></b-col>\n                    <b-col><strong>Payoff</strong></b-col>\n                    <b-col><strong>Pool</strong></b-col>\n                </b-row>\n                <b-row v-for=\"exotic in race.wagering.exotics\" :key=\"'ex' + exotic.unit + exotic.name + exotic.numberCorrect\">\n                    <b-col cols=\"4\">{{format2PlacesCurrency(exotic.unit)}} {{exotic.name}}</b-col>\n                    <b-col cols=\"4\">{{exotic.winningNumbers}} <span v-if=\"exotic.numberCorrect\">({{exotic.numberCorrect}} correct)</span></b-col>\n                    <b-col>{{format2PlacesCurrency(exotic.payoff)}}</b-col>\n                    <b-col>{{formatCurrency(exotic.pool)}}</b-col>\n                </b-row>\n            </b-col>\n        </b-row><br>\n\t\t<strong>Trainers: </strong><span v-for=\"(starter,trindex) in race.starters\" :key=\"'tr' + starter.program\">{{starter.program}} - {{starter.trainer.name}}<span v-if=\"trindex < race.scratches.length - 1\"></span>;&nbsp;</span><br>\n\t\t<strong>Owners: </strong><span v-for=\"(starter,owindex) in race.starters\" :key=\"'ow' + starter.program\">{{starter.program}} - {{starter.owner.name}}<span v-if=\"owindex < race.scratches.length - 1\"></span>;&nbsp;</span><br>\n\t\t<strong>Footnotes</strong><br>\n\t\t{{race.footnotes}}\n    </div>\n</template>\n\n<script>\nimport { BIconStar, BIconStarFill, BIconCameraVideoFill, BIconKey, BIconBarChartSteps } from 'bootstrap-vue'\nimport _ from 'underscore'\n\nexport default {\n    name: 'ChartView',\n    components: {\n\t\tBIconStar, BIconStarFill, BIconCameraVideoFill, BIconKey, BIconBarChartSteps\n    },\n    props : ['race', 'starterFields', 'charts'],\n    data () {\n\t\treturn {\n\t\t\tflags: ['', 'Wide', 'Trouble', 'Bad Start', 'Good Trip', 'Duel', 'Early Speed', 'Late Kick', 'No Factor']\n        }\n    },\n    computed: {\n        claimed() {\n            return _.filter(this.race.starters, function(s){\n                return (s.claim && s.claim.claimed);\n            });\n        },\n        inForClaim() {\n\t\t\tvar c = 0;\n            for (var i = 0; i < this.race.starters.length; i++) {\n                if (this.race.starters[i].claim) {\n\t\t\t\t\tc++;\n                }\n            }\n            return c;\n        },\t\n\n    },\n    methods: {\n\t\tformatDate (date) {\n\t\t\treturn date[1] + \"/\" + date[2] + \"/\" + date[0];\n\t\t},\t\n\t\tformatCurrency(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\t\t\t\tstyle: 'currency',\n\t\t\t\tcurrency: 'USD',\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\n\t\tstr_pad_left(string,pad,length) {\n\t\t\treturn (new Array(length+1).join(pad)+string).slice(-length);\n\t\t},\n\t\tformat2Places(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 2, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},\n\t\tformat2PlacesCurrency(amount) {\n\t\t\tconst formatter = new Intl.NumberFormat('en-US', {\n                style: 'currency',\n\t\t\t\tcurrency: 'USD',\n\n\t\t\t\t// These options are needed to round to whole numbers if that's what you want.\n\t\t\t\tminimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n\t\t\t\tmaximumFractionDigits: 2, // (causes 2500.99 to be printed as $2,501)\n\t\t\t});\n\t\t\treturn formatter.format(amount);\n\t\t},        \n        keyRaceHorsesFormat(horses) {\n            var ret = \"<span class='pp'>\";\n            for (var i=0; i < horses.length; i++) {\n                ret += horses[i].name \n                    + \" @ \" + horses[i].track\n                    + \" \" + this.formatDate(horses[i].raceDate)\n                    + \" Pos: \" + horses[i].position \n                    + \" BL: \" + this.format2Places(horses[i].beatenLengths);\n                if (i < horses.length-1) ret += \"<br>\";\n            }\n            return ret + \"</span>\";\n        },\n        goToChart(starter) {\n             this.$emit(\"goToChart\", {\n                trackCode: starter.lastRaced.track.code,\n                raceDate: starter.lastRaced.raceDate,\n                raceNumber: starter.lastRaced.raceNumber\n             });\n        },\n        hasChart(lastRaced) {\n            if (lastRaced == null) return false;\t\n\t\t\tconst chartDates =  _.pluck(_.where(this.charts, {track: lastRaced.track.code}),'date');\t\n            const day = \"\" \n\t\t\t\t+ this.str_pad_left(lastRaced.raceDate[1],0,2) \n\t\t\t\t+ this.str_pad_left(lastRaced.raceDate[2],0,2) \n\t\t\t\t+ lastRaced.raceDate[0];\n\t\t\treturn chartDates.indexOf(day) >  -1;\n        }           \n    }\n}\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}